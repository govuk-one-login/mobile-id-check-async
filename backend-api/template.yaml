AWSTemplateFormatVersion: "2010-09-09"

Description: async-backend SAM template for the ID Check v2 app

Parameters:
  CodeSigningConfigArn:
    Description: |
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Type: String
    Default: none

  DeployAlarmsInDev:
    Description: Set to `true` to deploy alarms in a dev environment
    Type: String
    Default: false

  DevOverrideEventsBaseUrl:
    Description: |
      Override the EventsBaseUrl value for development deployments
    Type: String
    Default: none

  DevOverrideReadIdBaseUrl:
    Description: |
      Override the ReadIdBaseUrl value for development deployments
    Type: String
    Default: none

  DevOverrideReadIdMockBaseUrl:
    Description: |
      Override the ReadIdMockBaseUrl value for development deployments
    Type: String
    Default: none

  DevOverrideStsBaseUrl:
    Description: |
      Override the STS_BASE_URL value for development deployments
    Type: String
    Default: none

  DevOverrideTestResourcesBaseUrl:
    Description: |
      Override the TestResourcesBaseUrl value for development deployments
    Type: String
    Default: none

  Environment:
    Description: The environment type
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
      - integration
      - production
    Default: dev

  LambdaDeploymentPreference:
    Description: |
      Specifies the configuration to enable gradual Lambda deployments. Value can be 'AllAtOnce', a default deployment config, or name of custom DeploymentConfig.
    Type: String
    Default: AllAtOnce

  PermissionsBoundary:
    Description: |
      The ARN of the permissions boundary to apply to any role created by the template
    Type: String
    Default: none

  SamValidateLintWorkaround:
    Description: Do not update or override. This allows the definition of a resource that is never deployed.
    Type: String
    Default: unused

Mappings:
  CslsConfiguration:
    build:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    integration:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    production:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    staging:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2

  DNS:
    build:
      BaseDns: review-b-async.build.account.gov.uk
    dev:
      BaseDns: review-b-async.dev.account.gov.uk
    integration:
      BaseDns: review-b-async.integration.account.gov.uk
    production:
      BaseDns: review-b-async.account.gov.uk
    staging:
      BaseDns: review-b-async.staging.account.gov.uk

  EnvironmentConfiguration:
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables

  EnvironmentVariables:
    build:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /build/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /build/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /build/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      BiometricViewerAccessKey: /build/BIOMETRIC_VIEWER_ACCESS_KEY
      BiometricViewerAccessKeySecretCacheDurationInSeconds: 900
      ClientRegistrySecretPath: build/clientRegistry
      EnableBiometricResidenceCard: "true"
      EnableBiometricResidencePermit: "true"
      EnableDrivingLicence: "true"
      EnableNfcPassport: "true"
      EnableUtopiaTestDocument: "true"
      EventsBaseUrl: https://events.review-b-async.build.account.gov.uk
      ReadIdBaseUrl: https://readid-proxy.review-b-async.build.account.gov.uk/v2
      ReadIdMockBaseUrl: https://readid-mock.review-b-async.build.account.gov.uk/v2
      STSBASEURL: https://sts-mock.review-b-async.build.account.gov.uk
      SessionDurationInSeconds: 86400
      TestResourcesBaseUrl: https://test-resources.review-b-async.build.account.gov.uk
    dev:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /dev/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /dev/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /dev/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      BiometricViewerAccessKey: /dev/BIOMETRIC_VIEWER_ACCESS_KEY
      BiometricViewerAccessKeySecretCacheDurationInSeconds: 900
      ClientRegistrySecretPath: dev/clientRegistry
      EnableBiometricResidenceCard: "true"
      EnableBiometricResidencePermit: "true"
      EnableDrivingLicence: "true"
      EnableNfcPassport: "true"
      EnableUtopiaTestDocument: "true"
      EventsBaseUrl: https://events.review-b-async.dev.account.gov.uk
      ReadIdBaseUrl: https://readid-proxy.review-b-async.dev.account.gov.uk/v2
      ReadIdMockBaseUrl: https://readid-mock.review-b-async.dev.account.gov.uk/v2
      STSBASEURL: https://sts-mock.review-b-async.dev.account.gov.uk
      SessionDurationInSeconds: 86400
      TestResourcesBaseUrl: https://test-resources.review-b-async.dev.account.gov.uk
    integration:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /integration/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /integration/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /integration/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      BiometricViewerAccessKey: /integration/BIOMETRIC_VIEWER_ACCESS_KEY
      BiometricViewerAccessKeySecretCacheDurationInSeconds: 900
      ClientRegistrySecretPath: integration/clientRegistry
      EnableBiometricResidenceCard: "true"
      EnableBiometricResidencePermit: "true"
      EnableDrivingLicence: "true"
      EnableNfcPassport: "true"
      EnableUtopiaTestDocument: "true"
      ReadIdBaseUrl: https://readid-proxy.review-b-async.integration.account.gov.uk
      STSBASEURL: https://token.integration.account.gov.uk
      SessionDurationInSeconds: 86400
    production:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /production/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /production/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /production/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      BiometricViewerAccessKey: /production/BIOMETRIC_VIEWER_ACCESS_KEY
      BiometricViewerAccessKeySecretCacheDurationInSeconds: 900
      ClientRegistrySecretPath: production/clientRegistry
      EnableBiometricResidenceCard: "true"
      EnableBiometricResidencePermit: "true"
      EnableDrivingLicence: "true"
      EnableNfcPassport: "true"
      EnableUtopiaTestDocument: "false"
      ReadIdBaseUrl: https://readid-proxy.review-b-async.account.gov.uk
      STSBASEURL: https://token.account.gov.uk
      SessionDurationInSeconds: 86400
    staging:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /staging/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /staging/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /staging/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      BiometricViewerAccessKey: /staging/BIOMETRIC_VIEWER_ACCESS_KEY
      BiometricViewerAccessKeySecretCacheDurationInSeconds: 900
      ClientRegistrySecretPath: staging/clientRegistry
      EnableBiometricResidenceCard: "true"
      EnableBiometricResidencePermit: "true"
      EnableDrivingLicence: "true"
      EnableNfcPassport: "true"
      EnableUtopiaTestDocument: "true"
      ReadIdBaseUrl: https://readid-proxy.review-b-async.staging.account.gov.uk
      STSBASEURL: https://token.staging.account.gov.uk
      SessionDurationInSeconds: 86400

  IPVCore:
    build:
      AccountId: not-used
    dev:
      AccountId: not-used
    integration:
      AccountId: arn:aws:iam::991138514218:root
    production:
      AccountId: arn:aws:iam::075701497069:root
    staging:
      AccountId: arn:aws:iam::335257547869:root

  KMS:
    build:
      PendingDeletionInDays: 30
    dev:
      PendingDeletionInDays: 7
    integration:
      PendingDeletionInDays: 30
    production:
      PendingDeletionInDays: 30
    staging:
      PendingDeletionInDays: 30

  Lambda:
    build:
      AsyncCredentialReservedConcurrentExecutions: 160
      AsyncTokenReservedConcurrentExecutions: 160
      IssueBiometricCredentialReservedConcurrentExecutions: 34
      JsonWebKeysReservedConcurrentExecutions: 1
      LogLevel: INFO
      ReservedConcurrentExecutions: 80
    dev:
      AsyncCredentialReservedConcurrentExecutions: 0
      AsyncTokenReservedConcurrentExecutions: 0
      IssueBiometricCredentialReservedConcurrentExecutions: 0
      JsonWebKeysReservedConcurrentExecutions: 1
      LogLevel: DEBUG
      ReservedConcurrentExecutions: 0
    integration:
      AsyncCredentialReservedConcurrentExecutions: 15
      AsyncTokenReservedConcurrentExecutions: 15
      IssueBiometricCredentialReservedConcurrentExecutions: 34
      JsonWebKeysReservedConcurrentExecutions: 1
      LogLevel: INFO
      ReservedConcurrentExecutions: 15
    production:
      AsyncCredentialReservedConcurrentExecutions: 160
      AsyncTokenReservedConcurrentExecutions: 160
      IssueBiometricCredentialReservedConcurrentExecutions: 34
      JsonWebKeysReservedConcurrentExecutions: 1
      LogLevel: INFO
      ReservedConcurrentExecutions: 80
    staging:
      AsyncCredentialReservedConcurrentExecutions: 15
      AsyncTokenReservedConcurrentExecutions: 15
      IssueBiometricCredentialReservedConcurrentExecutions: 34
      JsonWebKeysReservedConcurrentExecutions: 1
      LogLevel: INFO
      ReservedConcurrentExecutions: 15

  PrivateApigw:
    build:
      ApiBurstLimit: 400
      ApiRateLimit: 200
      IpvCoreVpceId: ""
      PerformanceTestingVpceId: vpce-0a5d1c69016ab3b56
    dev:
      ApiBurstLimit: 20
      ApiRateLimit: 10
      IpvCoreVpceId: ""
      PerformanceTestingVpceId: vpce-0a5d1c69016ab3b56
    integration:
      ApiBurstLimit: 400
      ApiRateLimit: 200
      IpvCoreVpceId: vpce-0f47068fdf9ad0c3d
      PerformanceTestingVpceId: ""
    production:
      ApiBurstLimit: 400
      ApiRateLimit: 200
      IpvCoreVpceId: vpce-0e40247a557c2169e
      PerformanceTestingVpceId: ""
    staging:
      ApiBurstLimit: 400
      ApiRateLimit: 200
      IpvCoreVpceId: vpce-0cc0de10742b83b8a
      PerformanceTestingVpceId: ""

  ProxyApigw:
    build:
      ApiBurstLimit: 400
      ApiRateLimit: 200
      perfTesterRoleArn: arn:aws:iam::330163506186:role/perftest-PerformanceTesterRole
    dev:
      ApiBurstLimit: 20
      ApiRateLimit: 10
      perfTesterRoleArn: arn:aws:iam::330163506186:role/perftest-PerformanceTesterRole
    integration:
      ApiBurstLimit: 400
      ApiRateLimit: 200
      perfTesterRoleArn: ""
    production:
      ApiBurstLimit: 0
      ApiRateLimit: 0
      perfTesterRoleArn: ""
    staging:
      ApiBurstLimit: 400
      ApiRateLimit: 200
      perfTesterRoleArn: ""

  SessionsApigw:
    build:
      ApiBurstLimit: 400
      ApiRateLimit: 200
    dev:
      ApiBurstLimit: 20
      ApiRateLimit: 10
    integration:
      ApiBurstLimit: 400
      ApiRateLimit: 200
    production:
      ApiBurstLimit: 400
      ApiRateLimit: 200
    staging:
      ApiBurstLimit: 400
      ApiRateLimit: 200

  StaticVariables:
    urls:
      SupportManual: https://team-manual.account.gov.uk/teams/mobile-team/supporting-id-check-asynchronous-backend
      WarningAlarmsRunbook: https://govukverify.atlassian.net/wiki/spaces/DCMAW/pages/4800446694/Alarms+Runbook+Warnings

  TxMA:
    build:
      TxmaAccount: arn:aws:iam::750703655225:root
    dev:
      TxmaAccount: arn:aws:iam::248098332657:root
    integration:
      TxmaAccount: arn:aws:iam::729485541398:root
    production:
      TxmaAccount: arn:aws:iam::451773080033:root
    staging:
      TxmaAccount: arn:aws:iam::178023842775:root

Conditions:
  DeployAlarms: !Or
    - !Not
      - !Equals
        - !Ref Environment
        - dev
    - !Equals
      - !Ref DeployAlarmsInDev
      - true

  DeployProxyAlarms: !And
    - !Condition DeployAlarms
    - !Condition ProxyApiDeployment

  DeployProxyCsls: !And
    - !Condition ProxyApiDeployment
    - !Condition isNotDev

  DevelopmentStack: !And
    - !Equals
      - !Ref Environment
      - dev
    - !Not
      - !Equals
        - !Ref AWS::StackName
        - mob-async-backend

  IntegrateIpvCore: !Or
    - !Equals
      - !Ref Environment
      - staging
    - !Equals
      - !Ref Environment
      - integration
    - !Equals
      - !Ref Environment
      - production

  IntegratePerformanceTesting: !Or
    - !Equals
      - !Ref Environment
      - dev
    - !Equals
      - !Ref Environment
      - build

  IsDevOrBuild: !Or
    - !Equals
      - !Ref Environment
      - dev
    - !Equals
      - !Ref Environment
      - build

  NeverDeploy: !Equals
    - !Ref SamValidateLintWorkaround
    - Should always equal false

  ProxyApiDeployment: !Or
    - !Equals
      - !Ref Environment
      - dev
    - !Equals
      - !Ref Environment
      - build

  UseCanaryDeployment: !And
    - !Condition DeployAlarms
    - !Not
      - !Equals
        - !Ref LambdaDeploymentPreference
        - AllAtOnce

  UseCodeSigning: !Not
    - !Equals
      - !Ref CodeSigningConfigArn
      - none

  UseDevOverrideEventsBaseUrl: !Not
    - !Equals
      - !Ref DevOverrideEventsBaseUrl
      - none

  UseDevOverrideReadIdBaseUrl: !Not
    - !Equals
      - !Ref DevOverrideReadIdBaseUrl
      - none

  UseDevOverrideReadIdMockBaseUrl: !Not
    - !Equals
      - !Ref DevOverrideReadIdMockBaseUrl
      - none

  UseDevOverrideStsBaseUrl: !Not
    - !Equals
      - !Ref DevOverrideStsBaseUrl
      - none

  UseDevOverrideTestResourcesBaseUrl: !Not
    - !Equals
      - !Ref DevOverrideTestResourcesBaseUrl
      - none

  UsePermissionsBoundary: !Not
    - !Equals
      - !Ref PermissionsBoundary
      - none

  isDev: !Equals
    - !Ref Environment
    - dev

  isNotDev: !Not
    - !Equals
      - !Ref Environment
      - dev

  isNotDevOrBuild: !Or
    - !Equals
      - !Ref Environment
      - staging
    - !Equals
      - !Ref Environment
      - integration
    - !Equals
      - !Ref Environment
      - production

Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Architectures:
      - arm64
    AutoPublishAlias: live
    AutoPublishAliasAllProperties: true
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    DeploymentPreference:
      Enabled: false
      Role: !GetAtt CodeDeployServiceRole.Arn
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CLUSTER_ID: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        DT_CONNECTION_BASE_URL: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
        DT_TENANT: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        IPVCORE_OUTBOUND_SQS: !GetAtt IPVCoreOutboundSqs.QueueUrl
        ISSUER: !Sub
          - https://${BaseDns}
          - BaseDns: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        POWERTOOLS_SERVICE_NAME: mobile-id-check-async-backend
        SESSION_TABLE_NAME: !Ref SessionsTable
        SIGNING_KEY_ID: !GetAtt KMSSigningKey.Arn
        TXMA_SQS: !GetAtt TxMASqs.QueueUrl
        VENDOR_PROCESSING_SQS: !GetAtt VendorProcessingSqs.QueueUrl
    Layers:
      - !Sub
        - '{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}'
        - SecretArn: !FindInMap
            - EnvironmentConfiguration
            - !Ref Environment
            - dynatraceSecretArn
    LoggingConfig:
      ApplicationLogLevel: !FindInMap
        - Lambda
        - !Ref Environment
        - LogLevel
      LogFormat: JSON
      SystemLogLevel: INFO
    MemorySize: 512
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    ReservedConcurrentExecutions: !If
      - isDev
      - !Ref AWS::NoValue
      - !FindInMap
        - Lambda
        - !Ref Environment
        - ReservedConcurrentExecutions
    Runtime: nodejs22.x
    Timeout: 5

Resources:
  AsyncAbortSession4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/abortSession endpoint with a 4XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-abort-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncAbortSession4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/abortSession endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-abort-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncAbortSession5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/abortSession endpoint with a 5XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-abort-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncAbortSession5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/abortSession endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-abort-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncAbortSessionCompletionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.messageCode = *) && ($.functionVersion = *) }'
      LogGroupName: !Ref AsyncAbortSessionLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion
          MetricName: AsyncAbortSessionMessageCode
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"
    Condition: DeployAlarms

  AsyncAbortSessionErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: The number of Async Abort Session Lambda errors is greater than or equal to 10% for the latest function version
      AlarmName: !Sub ${AWS::StackName}-abort-session-lambda-error-rate
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: lambdaInvocations
          Label: Sum of invocations for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncAbortSessionFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncAbortSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncAbortSessionFunction.Version.Version
              MetricName: Invocations
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaErrors
          Label: Sum of function errors for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncAbortSessionFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncAbortSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncAbortSessionFunction.Version.Version
              MetricName: Errors
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaErrors/lambdaInvocations)*100
          Id: lambdaErrorPercentage
          Label: Percentage of invocations that result in a function error
          ReturnData: false
        - Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage)
          Id: lambdaErrorRate
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 10
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncAbortSessionFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncAbortSessionLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncAbortSession/asyncAbortSessionHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeployment
          - - !Ref AsyncAbortSessionErrorRateAlarm
            - !Ref AsyncAbortSessionLowCompletionAlarm
          - - !Ref AWS::NoValue
        Enabled: true
        Type: !Ref LambdaDeploymentPreference
      Events:
        AsyncAbortSession:
          Properties:
            Method: post
            Path: /async/abortSession
            RestApiId: !Ref SessionsApi
          Type: Api
      FunctionName: !Sub ${AWS::StackName}-abort-session
      Handler: asyncAbortSessionHandler.lambdaHandler
      Role: !GetAtt AsyncAbortSessionLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  AsyncAbortSessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncAbortSessionFunction.Arn
      Principal: events.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SessionsApi}/*/*/*

  AsyncAbortSessionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncAbortSessionFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:UpdateItem
                Effect: Allow
                Resource: !GetAtt SessionsTable.Arn
          PolicyName: AsyncAbortSessionFunctionDynamodbPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASqs.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncAbortSessionFunctionTxmaSQSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt IPVCoreOutboundSqs.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt IPVCoreKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncAbortSessionFunctionIPVCoreSQSPolicy
      RoleName: !Sub ${AWS::StackName}-abort-session-lambda

  AsyncAbortSessionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-abort-session
      RetentionInDays: 30

  AsyncAbortSessionLowCompletionAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncAbortSessionCompletionMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: A large proportion of Async Abort Session requests have not completed successfully.
      AlarmName: !Sub ${AWS::StackName}-abort-session-lambda-low-completion
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      Metrics:
        - Id: lambdaLogStarted
          Label: Sum of MOBILE_ASYNC_ABORT_SESSION_STARTED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ABORT_SESSION_STARTED
                - Name: Version
                  Value: !GetAtt AsyncAbortSessionFunction.Version.Version
              MetricName: AsyncAbortSessionMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaLogCompleted
          Label: Sum of MOBILE_ASYNC_ABORT_SESSION_COMPLETED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ABORT_SESSION_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncAbortSessionFunction.Version.Version
              MetricName: AsyncAbortSessionMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaLogCompleted/lambdaLogStarted)*100
          Id: lambdaLogCompletePercentage
          Label: Percentage of invocations that complete successfully
          ReturnData: false
        - Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage)
          Id: lowCompletionRateThreshold
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncAbortSessionSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref AsyncAbortSessionLogGroup
    Condition: isNotDev

  AsyncAbortSessionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm if the Async Abort Session Lambda throttles. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-abort-session-lambda-throttle
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncAbortSessionFunction
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSession4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-active-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSession4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-active-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSession5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-active-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSession5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-active-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSessionCompletionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.messageCode = *) && ($.functionVersion = *) }'
      LogGroupName: !Ref AsyncActiveSessionLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion
          MetricName: AsyncActiveSessionMessageCode
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"
    Condition: DeployAlarms

  AsyncActiveSessionErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: The number of Async Active Session Lambda errors is greater than or equal to 10% for the latest function version
      AlarmName: !Sub ${AWS::StackName}-active-session-lambda-error-rate
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: lambdaInvocations
          Label: Sum of invocations for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncActiveSessionFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncActiveSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
              MetricName: Invocations
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaErrors
          Label: Sum of function errors for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncActiveSessionFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncActiveSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
              MetricName: Errors
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaErrors/lambdaInvocations)*100
          Id: lambdaErrorPercentage
          Label: Percentage of invocations that result in a function error
          ReturnData: false
        - Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage)
          Id: lambdaErrorRate
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 10
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSessionFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncActiveSessionLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncActiveSession/asyncActiveSessionHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeployment
          - - !Ref AsyncActiveSessionErrorRateAlarm
            - !Ref AsyncActiveSessionLowCompletionAlarm
          - - !Ref AWS::NoValue
        Enabled: true
        Type: !Ref LambdaDeploymentPreference
      Environment:
        Variables:
          AUDIENCE: !Sub https://${SessionsApiDomainName}
          ENCRYPTION_KEY_ARN: !GetAtt KMSEncryptionKey.Arn
          STS_BASE_URL: !If
            - UseDevOverrideStsBaseUrl
            - !Ref DevOverrideStsBaseUrl
            - !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - STSBASEURL
      Events:
        AsyncActiveSession:
          Properties:
            Method: get
            Path: /async/activeSession
            RestApiId: !Ref SessionsApi
          Type: Api
      FunctionName: !Sub ${AWS::StackName}-active-session
      Handler: asyncActiveSessionHandler.lambdaHandler
      Role: !GetAtt AsyncActiveSessionLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-ProtectedSubnetIdA
          - !ImportValue devplatform-vpc-ProtectedSubnetIdB
          - !ImportValue devplatform-vpc-ProtectedSubnetIdC

  AsyncActiveSessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncActiveSessionFunction.Arn
      Principal: events.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SessionsApi}/*/*/*

  AsyncActiveSessionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:Query
                Condition:
                  ForAllValues:StringEquals:
                    dynamodb:Attributes:
                      - sessionId
                      - sessionState
                      - subjectIdentifier
                      - createdAt
                      - redirectUri
                      - clientState
                  StringEquals:
                    dynamodb:Select: SPECIFIC_ATTRIBUTES
                Effect: Allow
                Resource:
                  - !GetAtt SessionsTable.Arn
                  - !Sub ${SessionsTable.Arn}/index/subjectIdentifier-createdAt-index
            Version: "2012-10-17"
          PolicyName: DynamoReadSessionsTable
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncActiveSessionFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Decrypt
                Effect: Allow
                Resource: !GetAtt KMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: KMSDecryptPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-active-session-lambda

  AsyncActiveSessionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-active-session
      RetentionInDays: 30

  AsyncActiveSessionLowCompletionAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncActiveSessionCompletionMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: A large proportion of Async Active Session requests have not completed successfully.
      AlarmName: !Sub ${AWS::StackName}-active-session-lambda-low-completion
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      Metrics:
        - Id: lambdaLogStarted
          Label: Sum of MOBILE_ASYNC_ACTIVE_SESSION_STARTED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ACTIVE_SESSION_STARTED
                - Name: Version
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
              MetricName: AsyncActiveSessionMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaLogCompleted
          Label: Sum of MOBILE_ASYNC_COMPLETED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ACTIVE_SESSION_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
              MetricName: AsyncActiveSessionMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaLogCompleted/lambdaLogStarted)*100
          Id: lambdaLogCompletePercentage
          Label: Percentage of invocations that complete successfully
          ReturnData: false
        - Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage)
          Id: lowCompletionRateThreshold
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSessionSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref AsyncActiveSessionLogGroup
    Condition: isNotDev

  AsyncActiveSessionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm if the Async Active Session Lambda throttles. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-active-session-lambda-throttle
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncActiveSessionFunction
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricToken4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/biometricToken endpoint with a 4XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-biometric-token-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricToken4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/biometricToken endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-biometric-token-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricToken5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/biometricToken endpoint with a 5XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-biometric-token-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricToken5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/biometricToken endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-biometric-token-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricTokenCompletionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.messageCode = *) && ($.functionVersion = *) }'
      LogGroupName: !Ref AsyncBiometricTokenLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion
          MetricName: AsyncBiometricTokenMessageCode
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"
    Condition: DeployAlarms

  AsyncBiometricTokenErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: The number of Async Biometric Token Lambda errors is greater than or equal to 10% for the latest function version
      AlarmName: !Sub ${AWS::StackName}-biometric-token-lambda-error-rate
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: lambdaInvocations
          Label: Sum of invocations for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncBiometricTokenFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncBiometricTokenFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncBiometricTokenFunction.Version.Version
              MetricName: Invocations
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaErrors
          Label: Sum of function errors for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncBiometricTokenFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncBiometricTokenFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncBiometricTokenFunction.Version.Version
              MetricName: Errors
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaErrors/lambdaInvocations)*100
          Id: lambdaErrorPercentage
          Label: Percentage of invocations that result in a function error
          ReturnData: false
        - Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage)
          Id: lambdaErrorRate
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 10
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricTokenFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncBiometricTokenLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncBiometricToken/asyncBiometricTokenHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeployment
          - - !Ref AsyncBiometricTokenErrorRateAlarm
            - !Ref AsyncBiometricTokenLowCompletionAlarm
          - - !Ref AWS::NoValue
        Enabled: true
        Type: !Ref LambdaDeploymentPreference
      Environment:
        Variables:
          BIOMETRIC_SUBMITTER_KEY_SECRET_CACHE_DURATION_IN_SECONDS: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricSubmitterKeySecretCacheDurationInSeconds
          BIOMETRIC_SUBMITTER_KEY_SECRET_PATH_BRP: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricSubmitterKeySecretPathBrp
          BIOMETRIC_SUBMITTER_KEY_SECRET_PATH_DL: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricSubmitterKeySecretPathDl
          BIOMETRIC_SUBMITTER_KEY_SECRET_PATH_PASSPORT: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricSubmitterKeySecretPathPassport
          READID_BASE_URL: !If
            - UseDevOverrideReadIdBaseUrl
            - !Ref DevOverrideReadIdBaseUrl
            - !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - ReadIdBaseUrl
      Events:
        AsyncBiometricToken:
          Properties:
            Method: post
            Path: /async/biometricToken
            RestApiId: !Ref SessionsApi
          Type: Api
      FunctionName: !Sub ${AWS::StackName}-biometric-token
      Handler: asyncBiometricTokenHandler.lambdaHandler
      Role: !GetAtt AsyncBiometricTokenLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-ProtectedSubnetIdA
          - !ImportValue devplatform-vpc-ProtectedSubnetIdB
          - !ImportValue devplatform-vpc-ProtectedSubnetIdC

  AsyncBiometricTokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncBiometricTokenFunction.Arn
      Principal: events.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SessionsApi}/*/*/*

  AsyncBiometricTokenLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncBiometricTokenFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${submitterKeyPathPassport}
                    - submitterKeyPathPassport: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - BiometricSubmitterKeySecretPathPassport
                  - !Sub
                    - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${submitterKeyPathBrp}
                    - submitterKeyPathBrp: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - BiometricSubmitterKeySecretPathBrp
                  - !Sub
                    - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${submitterKeyPathDl}
                    - submitterKeyPathDl: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - BiometricSubmitterKeySecretPathDl
            Version: "2012-10-17"
          PolicyName: AsyncBiometricTokenParameterStorePolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:UpdateItem
                Effect: Allow
                Resource: !GetAtt SessionsTable.Arn
          PolicyName: AsyncBiometricTokenFunctionDynamodbPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASqs.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncBiometricTokenFunctionTxmaSQSPolicy
      RoleName: !Sub ${AWS::StackName}-biometric-token-lambda

  AsyncBiometricTokenLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-biometric-token
      RetentionInDays: 30

  AsyncBiometricTokenLowCompletionAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncBiometricTokenCompletionMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: A large proportion of Async Biometric Token requests have not completed successfully.
      AlarmName: !Sub ${AWS::StackName}-biometric-token-lambda-low-completion
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      Metrics:
        - Id: lambdaLogStarted
          Label: Sum of MOBILE_ASYNC_BIOMETRIC_TOKEN_STARTED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_BIOMETRIC_TOKEN_STARTED
                - Name: Version
                  Value: !GetAtt AsyncBiometricTokenFunction.Version.Version
              MetricName: AsyncBiometricTokenMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaLogCompleted
          Label: Sum of MOBILE_ASYNC_BIOMETRIC_TOKEN_COMPLETED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_BIOMETRIC_TOKEN_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncBiometricTokenFunction.Version.Version
              MetricName: AsyncBiometricTokenMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaLogCompleted/lambdaLogStarted)*100
          Id: lambdaLogCompletePercentage
          Label: Percentage of invocations that complete successfully
          ReturnData: false
        - Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage)
          Id: lowCompletionRateThreshold
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricTokenSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref AsyncBiometricTokenLogGroup
    Condition: isNotDev

  AsyncBiometricTokenThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm if the Async Biometric Token Lambda throttles. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-biometric-token-lambda-throttle
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncBiometricTokenFunction
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredential4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/credential endpoint with a 4XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-credential-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredential4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/credential endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-credential-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredential5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/credential endpoint with a 5XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-credential-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredential5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/credential endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-credential-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredentialCompletionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.messageCode = *) && ($.functionVersion = *) }'
      LogGroupName: !Ref AsyncCredentialLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion
          MetricName: AsyncCredentialMessageCode
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"
    Condition: DeployAlarms

  AsyncCredentialErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: The number of Async Credential Lambda errors is greater than or equal to 10% for the latest function version
      AlarmName: !Sub ${AWS::StackName}-credential-lambda-error-rate
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: lambdaInvocations
          Label: Sum of invocations for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncCredentialFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncCredentialFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncCredentialFunction.Version.Version
              MetricName: Invocations
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaErrors
          Label: Sum of function errors for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncCredentialFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncCredentialFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncCredentialFunction.Version.Version
              MetricName: Errors
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaErrors/lambdaInvocations)*100
          Id: lambdaErrorPercentage
          Label: Percentage of invocations that result in a function error
          ReturnData: false
        - Expression: IF(lambdaErrors >= 5,lambdaErrorPercentage)
          Id: lambdaErrorRateThreshold
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 10
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredentialFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncCredentialLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncCredential/asyncCredentialHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeployment
          - - !Ref AsyncCredentialErrorRateAlarm
            - !Ref AsyncCredentialLowCompletionAlarm
          - - !Ref AWS::NoValue
        Enabled: true
        Type: !Ref LambdaDeploymentPreference
      Environment:
        Variables:
          CLIENT_REGISTRY_SECRET_NAME: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - ClientRegistrySecretPath
          SESSION_DURATION_IN_SECONDS: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - SessionDurationInSeconds
      FunctionName: !Sub ${AWS::StackName}-credential
      Handler: asyncCredentialHandler.lambdaHandler
      ReservedConcurrentExecutions: !If
        - isDev
        - !Ref AWS::NoValue
        - !FindInMap
          - Lambda
          - !Ref Environment
          - AsyncCredentialReservedConcurrentExecutions
      Role: !GetAtt AsyncCredentialLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  AsyncCredentialFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncCredentialFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PrivateApi}/*/*/*

  AsyncCredentialLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:Query
                Condition:
                  ForAllValues:StringEquals:
                    dynamodb:Attributes:
                      - sessionId
                      - sessionState
                      - subjectIdentifier
                      - createdAt
                  StringEquals:
                    dynamodb:Select: SPECIFIC_ATTRIBUTES
                Effect: Allow
                Resource:
                  - !GetAtt SessionsTable.Arn
                  - !Sub ${SessionsTable.Arn}/index/subjectIdentifier-createdAt-index
              - Action:
                  - dynamodb:PutItem
                Effect: Allow
                Resource: !GetAtt SessionsTable.Arn
            Version: "2012-10-17"
          PolicyName: DynamoReadSessionsTable
        - PolicyDocument:
            Statement:
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${clientRegistrySecretPath}-??????
                    - clientRegistrySecretPath: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - ClientRegistrySecretPath
            Version: "2012-10-17"
          PolicyName: AsyncCredentialFunctionSecretsManagerPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncCredentialFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Verify
                Effect: Allow
                Resource: !GetAtt KMSSigningKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncCredentialFunctionKmsPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASqs.Arn
              - Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncCredentialFunctionSQSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-credential-lambda

  AsyncCredentialLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-credential
      RetentionInDays: 30

  AsyncCredentialLowCompletionAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncCredentialCompletionMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: A large proportion of Async Credential requests have not completed successfully.
      AlarmName: !Sub ${AWS::StackName}-credential-lambda-low-completion
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      Metrics:
        - Id: lambdaLogStarted
          Label: Sum of MOBILE_ASYNC_CREDENTIAL_STARTED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_CREDENTIAL_STARTED
                - Name: Version
                  Value: !GetAtt AsyncCredentialFunction.Version.Version
              MetricName: AsyncCredentialMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaLogCompleted
          Label: Sum of MOBILE_ASYNC_CREDENTIAL_COMPLETED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_CREDENTIAL_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncCredentialFunction.Version.Version
              MetricName: AsyncCredentialMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaLogCompleted/lambdaLogStarted)*100
          Id: lambdaLogCompletePercentage
          Label: Percentage of invocations that complete successfully
          ReturnData: false
        - Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage)
          Id: lowCompletionRateThreshold
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredentialSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref AsyncCredentialLogGroup
    Condition: isNotDev

  AsyncCredentialThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm if the Async Credential Lambda throttles. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-credential-lambda-throttle
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncCredentialFunction
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSession4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/finishBiometricSession endpoint with a 4XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-finish-biometric-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSession4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/finishBiometricSession endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-finish-biometric-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSession5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/finishBiometricSession endpoint with a 5XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-finish-biometric-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSession5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/finishBiometricSession endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-finish-biometric-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSessionCompletionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.messageCode = *) && ($.functionVersion = *) }'
      LogGroupName: !Ref AsyncFinishBiometricSessionLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion
          MetricName: AsyncFinishBiometricSessionMessageCode
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"
    Condition: DeployAlarms

  AsyncFinishBiometricSessionErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: The number of Async Finish Biometric Token Lambda errors is greater than or equal to 10% for the latest function version
      AlarmName: !Sub ${AWS::StackName}-finish-biometric-session-lambda-error-rate
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: lambdaInvocations
          Label: Sum of invocations for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncFinishBiometricSessionFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncFinishBiometricSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncFinishBiometricSessionFunction.Version.Version
              MetricName: Invocations
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaErrors
          Label: Sum of function errors for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncFinishBiometricSessionFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncFinishBiometricSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncFinishBiometricSessionFunction.Version.Version
              MetricName: Errors
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaErrors/lambdaInvocations)*100
          Id: lambdaErrorPercentage
          Label: Percentage of invocations that result in a function error
          ReturnData: false
        - Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage)
          Id: lambdaErrorRate
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 10
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSessionFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncFinishBiometricSessionLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncFinishBiometricSession/asyncFinishBiometricSessionHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeployment
          - - !Ref AsyncFinishBiometricSessionErrorRateAlarm
            - !Ref AsyncFinishBiometricSessionLowCompletionAlarm
          - - !Ref AWS::NoValue
        Enabled: true
        Type: !Ref LambdaDeploymentPreference
      Events:
        AsyncFinishBiometricSession:
          Properties:
            Method: post
            Path: /async/finishBiometricSession
            RestApiId: !Ref SessionsApi
          Type: Api
      FunctionName: !Sub ${AWS::StackName}-finish-biometric-session
      Handler: asyncFinishBiometricSessionHandler.lambdaHandler
      Role: !GetAtt AsyncFinishBiometricSessionLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  AsyncFinishBiometricSessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncFinishBiometricSessionFunction.Arn
      Principal: events.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SessionsApi}/*/*/*

  AsyncFinishBiometricSessionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncFinishBiometricSessionFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:UpdateItem
                Effect: Allow
                Resource: !GetAtt SessionsTable.Arn
          PolicyName: AsyncFinishBiometricSessionFunctionDynamodbPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASqs.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncFinishBiometricSessionFunctionTxmaSQSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt VendorProcessingSqs.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt VendorProcessingKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncFinishBiometricSessionFunctionVendorProcessingSQSPolicy
      RoleName: !Sub ${AWS::StackName}-finish-biometric-session-lambda

  AsyncFinishBiometricSessionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-finish-biometric-session
      RetentionInDays: 30

  AsyncFinishBiometricSessionLowCompletionAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncFinishBiometricSessionCompletionMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: A large proportion of Async Finish Biometric Session requests have not completed successfully.
      AlarmName: !Sub ${AWS::StackName}-finish-biometric-session-lambda-low-completion
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      Metrics:
        - Id: lambdaLogStarted
          Label: Sum of MOBILE_ASYNC_FINISH_BIOMETRIC_SESSION_STARTED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_FINISH_BIOMETRIC_SESSION_STARTED
                - Name: Version
                  Value: !GetAtt AsyncFinishBiometricSessionFunction.Version.Version
              MetricName: AsyncFinishBiometricSessionMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaLogCompleted
          Label: Sum of MOBILE_ASYNC_FINISH_BIOMETRIC_SESSION_COMPLETED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_FINISH_BIOMETRIC_SESSION_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncFinishBiometricSessionFunction.Version.Version
              MetricName: AsyncFinishBiometricSessionMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaLogCompleted/lambdaLogStarted)*100
          Id: lambdaLogCompletePercentage
          Label: Percentage of invocations that complete successfully
          ReturnData: false
        - Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage)
          Id: lowCompletionRateThreshold
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSessionSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref AsyncFinishBiometricSessionLogGroup
    Condition: isNotDev

  AsyncFinishBiometricSessionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm if the Async Finish Biometric Session Lambda throttles. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-finish-biometric-session-lambda-throttle
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncFinishBiometricSessionFunction
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialBiometricSessionNotValidHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Alarms when 25 or more log events with the messageCode MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_BIOMETRIC_SESSION_NOT_VALID have occurred. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-issue-biometric-credential-biometric-session-not-valid
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_BIOMETRIC_SESSION_NOT_VALID
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 25
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialBiometricSessionNotValidLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Alarms when 1 or more log events with the messageCode MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_BIOMETRIC_SESSION_NOT_VALID have occurred. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-issue-biometric-credential-biometric-session-not-valid
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_BIOMETRIC_SESSION_NOT_VALID
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialCompletionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.messageCode = *) && ($.functionVersion = *) }'
      LogGroupName: !Ref AsyncIssueBiometricCredentialLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion
          MetricName: AsyncIssueBiometricCredentialMessageCode
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialDrivingLicenceExpiredAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Trigger when a Veriff result has succeeded but the driving licence is expired. This indicates that the vendor has disabled their expiry checks. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-async-issue-biometric-credential-driving-licence-expired
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_VENDOR_CHECKS_PASSED_FOR_EXPIRED_DRIVING_LICENCE
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Sum
      Threshold: 5
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: The number of Async Issue Biometric Credential Lambda errors is greater than or equal to 10% for the latest function version
      AlarmName: !Sub ${AWS::StackName}-issue-biometric-credential-lambda-error-rate
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: lambdaInvocations
          Label: Sum of invocations for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncIssueBiometricCredentialFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncIssueBiometricCredentialFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncIssueBiometricCredentialFunction.Version.Version
              MetricName: Invocations
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaErrors
          Label: Sum of function errors for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncIssueBiometricCredentialFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncIssueBiometricCredentialFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncIssueBiometricCredentialFunction.Version.Version
              MetricName: Errors
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaErrors/lambdaInvocations)*100
          Id: lambdaErrorPercentage
          Label: Percentage of invocations that result in a function error
          ReturnData: false
        - Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage)
          Id: lambdaErrorRate
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 10
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialErrorWritingAuditEventHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Alarms when 25 or more log events with the messageCode MOBILE_ASYNC_ERROR_WRITING_AUDIT_EVENT have been emitted by the Issue Biometric Credential Lambda. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-issue-biometric-credential-error-writing-audit-event
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ERROR_WRITING_AUDIT_EVENT
      EvaluationPeriods: 5
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 25
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialErrorWritingAuditEventLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Alarms when 2 or more log events with the messageCode MOBILE_ASYNC_ERROR_WRITING_AUDIT_EVENT have been emitted by the Issue Biometric Credential Lambda. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-issue-biometric-credential-error-writing-audit-event
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ERROR_WRITING_AUDIT_EVENT
      EvaluationPeriods: 5
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Sum
      Threshold: 2
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialFailureToGetBiometricSessionFromVendorHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Alarms when 25 or more log events with the messageCode MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_GET_FROM_READID_FAILURE have occurred. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-issue-biometric-credential-failure-to-get-biometric-session-from-vendor
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_GET_FROM_READID_FAILURE
      EvaluationPeriods: 5
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 25
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialFailureToGetBiometricSessionFromVendorLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Alarms when 5 or more log events with the messageCode MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_GET_FROM_READID_FAILURE have occurred. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-issue-biometric-credential-failure-to-get-biometric-session-from-vendor
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_GET_FROM_READID_FAILURE
      EvaluationPeriods: 5
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Sum
      Threshold: 5
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncIssueBiometricCredentialLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncIssueBiometricCredential/asyncIssueBiometricCredentialHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeployment
          - - !Ref AsyncIssueBiometricCredentialErrorRateAlarm
            - !Ref AsyncIssueBiometricCredentialLowCompletionAlarm
          - - !Ref AWS::NoValue
        Enabled: true
        Type: !Ref LambdaDeploymentPreference
      Environment:
        Variables:
          BIOMETRIC_VIEWER_ACCESS_KEY_SECRET_CACHE_DURATION_IN_SECONDS: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricViewerAccessKeySecretCacheDurationInSeconds
          BIOMETRIC_VIEWER_KEY_SECRET_PATH: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricViewerAccessKey
          ENABLE_BIOMETRIC_RESIDENCE_CARD: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - EnableBiometricResidenceCard
          ENABLE_BIOMETRIC_RESIDENCE_PERMIT: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - EnableBiometricResidencePermit
          ENABLE_DRIVING_LICENCE: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - EnableDrivingLicence
          ENABLE_NFC_PASSPORT: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - EnableNfcPassport
          ENABLE_UTOPIA_TEST_DOCUMENT: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - EnableUtopiaTestDocument
          READID_BASE_URL: !If
            - UseDevOverrideReadIdBaseUrl
            - !Ref DevOverrideReadIdBaseUrl
            - !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - ReadIdBaseUrl
          VERIFIABLE_CREDENTIAL_SIGNING_KEY_ID: !Ref VerifiableCredentialSigningKey
      FunctionName: !Sub ${AWS::StackName}-issue-biometric-credential
      Handler: asyncIssueBiometricCredentialHandler.lambdaHandler
      ReservedConcurrentExecutions: !If
        - isDev
        - !Ref AWS::NoValue
        - !FindInMap
          - Lambda
          - !Ref Environment
          - IssueBiometricCredentialReservedConcurrentExecutions
      Role: !GetAtt AsyncIssueBiometricCredentialLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-ProtectedSubnetIdA
          - !ImportValue devplatform-vpc-ProtectedSubnetIdB
          - !ImportValue devplatform-vpc-ProtectedSubnetIdC

  AsyncIssueBiometricCredentialInvalidSqsEventAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Fires when a log event with messageCode MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_INVALID_SQS_EVENT is detected. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-issue-biometric-credential-lambda-invalid-sqs-event
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_INVALID_SQS_EVENT
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncIssueBiometricCredentialLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:ChangeMessageVisibility
                Effect: Allow
                Resource:
                  - !GetAtt VendorProcessingSqs.Arn
            Version: "2012-10-17"
          PolicyName: SQSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASqs.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncIssueBiometricCredentialFunctionTxmaSQSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt IPVCoreOutboundSqs.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt IPVCoreKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncIssueBiometricCredentialFunctionIPVCoreSQSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Decrypt
                Effect: Allow
                Resource: !GetAtt VendorProcessingKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: KMSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Sign
                Effect: Allow
                Resource: !GetAtt VerifiableCredentialSigningKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncIssueBiometricCredentialFunctionVCSigningPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${biometricViewerAccessKey}
                    - biometricViewerAccessKey: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - BiometricViewerAccessKey
            Version: "2012-10-17"
          PolicyName: AsyncIssueBiometricCredentialParameterStorePolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                Effect: Allow
                Resource: !GetAtt SessionsTable.Arn
          PolicyName: DynamoDBPolicy
      RoleName: !Sub ${AWS::StackName}-issue-biometric-credential-lambda

  AsyncIssueBiometricCredentialLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-issue-biometric-credential
      RetentionInDays: 30

  AsyncIssueBiometricCredentialLowCompletionAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialCompletionMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: A large proportion of Async Issue Biometric Credential requests have not completed successfully.
      AlarmName: !Sub ${AWS::StackName}-issue-biometric-credential-lambda-low-completion
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      Metrics:
        - Id: lambdaLogStarted
          Label: Sum of MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_STARTED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_STARTED
                - Name: Version
                  Value: !GetAtt AsyncIssueBiometricCredentialFunction.Version.Version
              MetricName: AsyncIssueBiometricCredentialMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaLogCompleted
          Label: Sum of MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_COMPLETED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncIssueBiometricCredentialFunction.Version.Version
              MetricName: AsyncIssueBiometricCredentialMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaLogCompleted/lambdaLogStarted)*100
          Id: lambdaLogCompletePercentage
          Label: Percentage of invocations that complete successfully
          ReturnData: false
        - Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage)
          Id: lowCompletionRateThreshold
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ $.messageCode = * }'
      LogGroupName: !Ref AsyncIssueBiometricCredentialLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: MessageCode
              Value: $.messageCode
          MetricName: AsyncIssueBiometricCredentialMessageCode
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialParseFailureHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Alarms when 25 or more log events with the messageCode MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_BIOMETRIC_SESSION_PARSE_FAILURE have occurred. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-issue-biometric-credential-parse-failure
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_BIOMETRIC_SESSION_PARSE_FAILURE
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 25
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialParseFailureLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Alarms when 1 or more log events with the messageCode MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_BIOMETRIC_SESSION_PARSE_FAILURE have occurred. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-issue-biometric-credential-parse-failure
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_BIOMETRIC_SESSION_PARSE_FAILURE
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncIssueBiometricCredentialSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref AsyncIssueBiometricCredentialLogGroup
    Condition: isNotDev

  AsyncIssueBiometricCredentialVendorLikenessDisabledAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Alarms when 1 or more log events with the messageCode MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_VENDOR_LIKENESS_DISABLED have occurred. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-async-issue-biometric-credential-vendor-likeness-disabled
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: MessageCode
          Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_VENDOR_LIKENESS_DISABLED
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: AsyncIssueBiometricCredentialMessageCode
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncLambdaClaimedAccountConcurrencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Alarms when the level of claimed account concurrency reaches 80% of maximum capacity. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-lambda-claimed-account-concurrency-reaching-limit
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: ClaimedAccountConcurrency
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Maximum
      Threshold: 800
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncPrivateApiAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-private-api-access-logs
      RetentionInDays: 30

  AsyncPrivateApiSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref AsyncPrivateApiAccessLogs
    Condition: isNotDev

  AsyncToken4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/token endpoint with a 4XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-token-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncToken4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/token endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-token-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncToken5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/token endpoint with a 5XX error. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-token-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncToken5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/token endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-token-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncTokenCompletionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.messageCode = *) && ($.functionVersion = *) }'
      LogGroupName: !Ref AsyncTokenLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion
          MetricName: AsyncTokenMessageCode
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"
    Condition: DeployAlarms

  AsyncTokenErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: The number of Async Token Lambda errors is greater than or equal to 10% for the latest function version
      AlarmName: !Sub ${AWS::StackName}-token-lambda-error-rate
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: lambdaInvocations
          Label: Sum of invocations for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncTokenFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncTokenFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncTokenFunction.Version.Version
              MetricName: Invocations
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaErrors
          Label: Sum of function errors for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: Resource
                  Value: !Sub ${AsyncTokenFunction}:live
                - Name: FunctionName
                  Value: !Ref AsyncTokenFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncTokenFunction.Version.Version
              MetricName: Errors
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaErrors/lambdaInvocations)*100
          Id: lambdaErrorPercentage
          Label: Percentage of invocations that result in a function error
          ReturnData: false
        - Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage)
          Id: lambdaErrorRate
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 10
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncTokenFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncTokenLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncToken/asyncTokenHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeployment
          - - !Ref AsyncTokenErrorRateAlarm
            - !Ref AsyncTokenLowCompletionAlarm
          - - !Ref AWS::NoValue
        Enabled: true
        Type: !Ref LambdaDeploymentPreference
      Environment:
        Variables:
          CLIENT_REGISTRY_SECRET_NAME: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - ClientRegistrySecretPath
      FunctionName: !Sub ${AWS::StackName}-token
      Handler: asyncTokenHandler.lambdaHandler
      ReservedConcurrentExecutions: !If
        - isDev
        - !Ref AWS::NoValue
        - !FindInMap
          - Lambda
          - !Ref Environment
          - AsyncTokenReservedConcurrentExecutions
      Role: !GetAtt AsyncTokenLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  AsyncTokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncTokenFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PrivateApi}/*/*/*

  AsyncTokenLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${clientRegistrySecretPath}-??????
                    - clientRegistrySecretPath: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - ClientRegistrySecretPath
            Version: "2012-10-17"
          PolicyName: AsyncTokenFunctionSecretsManagerPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncTokenFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Sign
                Effect: Allow
                Resource: !GetAtt KMSSigningKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncTokenFunctionKmsPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASqs.Arn
              - Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncTokenFunctionSQSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-token-lambda

  AsyncTokenLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-token
      RetentionInDays: 30

  AsyncTokenLowCompletionAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncTokenCompletionMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: A large proportion of Async Token requests have not completed successfully.
      AlarmName: !Sub ${AWS::StackName}-token-lambda-low-completion
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      Metrics:
        - Id: lambdaLogStarted
          Label: Sum of MOBILE_ASYNC_TOKEN_STARTED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_TOKEN_STARTED
                - Name: Version
                  Value: !GetAtt AsyncTokenFunction.Version.Version
              MetricName: AsyncTokenMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: lambdaLogCompleted
          Label: Sum of MOBILE_ASYNC_TOKEN_COMPLETED messageCodes for latest Lambda version
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_TOKEN_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncTokenFunction.Version.Version
              MetricName: AsyncTokenMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (lambdaLogCompleted/lambdaLogStarted)*100
          Id: lambdaLogCompletePercentage
          Label: Percentage of invocations that complete successfully
          ReturnData: false
        - Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage)
          Id: lowCompletionRateThreshold
          Label: Error threshold calculation
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncTokenSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref AsyncTokenLogGroup
    Condition: isNotDev

  AsyncTokenThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm if the Async Token Lambda throttles. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-token-lambda-throttle
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncTokenFunction
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncTxmaEvent4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/txmaEvent endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-txma-event-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncTxmaEvent4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/txmaEvent endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-txma-event-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncTxmaEvent5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/txmaEvent endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-txma-event-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncTxmaEvent5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/txmaEvent endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-txma-event-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncTxmaEventFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncTxmaEventLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncTxmaEvent/asyncTxmaEventHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      Events:
        AsyncTxmaEvent:
          Properties:
            Method: post
            Path: /async/txmaEvent
            RestApiId: !Ref SessionsApi
          Type: Api
      FunctionName: !Sub ${AWS::StackName}-txma-event
      Handler: asyncTxmaEventHandler.lambdaHandler
      Role: !GetAtt AsyncTxmaEventLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  AsyncTxmaEventFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncTxmaEventFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SessionsApi}/*/*/*

  AsyncTxmaEventLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncTxmaEventFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:GetItem
                Effect: Allow
                Resource: !GetAtt SessionsTable.Arn
          PolicyName: AsyncTxmaEventFunctionDynamodbPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASqs.Arn
              - Action:
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncTxmaEventFunctionTxmaSQSPolicy
      RoleName: !Sub ${AWS::StackName}-txma-event-lambda

  AsyncTxmaEventLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-txma-event
      RetentionInDays: 30

  AsyncTxmaEventSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref AsyncTxmaEventLogGroup
    Condition: isNotDev

  AsyncTxmaEventThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm if the Async TxMA Event Lambda throttles. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-txma-event-lambda-throttle
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncTxmaEventFunction
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      RoleName: !Sub ${AWS::StackName}-code-deploy-service-role

  CredentialsIssuedMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ $.messageCode = MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_VC_ISSUED }'
      LogGroupName: !Ref AsyncIssueBiometricCredentialLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: DocumentType
              Value: $.documentType
          MetricName: CredentialsIssued
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"

  IPVCoreDlqAgeOfOldestMessageHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm when the age of the oldest message in IPV Core SQS DLQ is 10 days or older. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-ipv-core-dlq-age-of-oldest-message
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value: !GetAtt IPVCoreOutboundDlq.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Maximum
      Threshold: 864000
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  IPVCoreDlqAgeOfOldestMessageLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Trigger an alarm when the age of the oldest message in IPV Core SQS DLQ is 3 days or older. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-ipv-core-dlq-age-of-oldest-message
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value: !GetAtt IPVCoreOutboundDlq.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Maximum
      Threshold: 259200
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  IPVCoreDlqMessageVisibleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm when new message gets added to IPV Core SQS DLQ. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-ipv-core-dlq-message-visible
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value: !GetAtt IPVCoreOutboundDlq.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Maximum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  IPVCoreKMSEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for encrypting the SQS for IPVCore messages
      Enabled: true
      KeyPolicy: !If
        - isNotDevOrBuild
        - Statement:
            - Action:
                - kms:*
              Effect: Allow
              Principal:
                AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
              Resource:
                - '*'
            - Action:
                - kms:Decrypt
              Effect: Allow
              Principal:
                AWS: !FindInMap
                  - IPVCore
                  - !Ref Environment
                  - AccountId
              Resource:
                - '*'
          Version: "2012-10-17"
        - Statement:
            - Action:
                - kms:*
              Effect: Allow
              Principal:
                AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
              Resource:
                - '*'
          Version: "2012-10-17"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays

  IPVCoreKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-IPVCoreKMSEncryptionKey
      TargetKeyId: !Ref IPVCoreKMSEncryptionKey

  IPVCoreOutboundDlq:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref IPVCoreKMSEncryptionKey
      MessageRetentionPeriod: 345600
      QueueName: !Sub ${AWS::StackName}-ipv-core-outbound-dlq

  IPVCoreOutboundSqs:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      KmsMasterKeyId: !Ref IPVCoreKeyAlias
      MessageRetentionPeriod: 345600
      QueueName: !Sub ${AWS::StackName}-ipv-core-outbound
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt IPVCoreOutboundDlq.Arn
        maxReceiveCount: 60
      VisibilityTimeout: 60

  IPVCoreOutboundSqsPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ChangeMessageVisibility
              - sqs:ReceiveMessage
            Effect: Allow
            Principal:
              AWS:
                - !FindInMap
                  - IPVCore
                  - !Ref Environment
                  - AccountId
            Resource:
              - !GetAtt IPVCoreOutboundSqs.Arn
        Version: "2012-10-17"
      Queues:
        - !Ref IPVCoreOutboundSqs
    Condition: isNotDevOrBuild

  IPVCoreSqsAgeOfOldestMessageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Trigger an alarm when the age of the oldest message in IPV Core SQS queue is 30 minutes or older. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-ipv-core-sqs-age-of-oldest-message
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value: !GetAtt IPVCoreOutboundSqs.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Maximum
      Threshold: 1800
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  IssueBiometricCredentialEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt VendorProcessingSqs.Arn
      FunctionName: !Ref AsyncIssueBiometricCredentialFunction.Alias
      ScalingConfig:
        MaximumConcurrency: 34

  JourneysStartedMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ $.messageCode = MOBILE_ASYNC_CREDENTIAL_SESSION_CREATED }'
      LogGroupName: !Ref AsyncCredentialLogGroup
      MetricTransformations:
        - MetricName: JourneysStarted
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"

  JsonWebKeysBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::StackName}-jwks-keys-${Environment}
      LoggingConfiguration:
        DestinationBucketName: !Ref JsonWebKeysBucketAccessLogs
        LogFilePrefix: !Sub ${AWS::StackName}-jwks-keys
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  JsonWebKeysBucketAccessLogs:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::StackName}-jwks-keys-access-logs-${Environment}
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  JsonWebKeysBucketAccessLogsPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref JsonWebKeysBucketAccessLogs
      PolicyDocument:
        Statement:
          - Action: '*'
            Condition:
              Bool:
                aws:SecureTransport: false
            Effect: Deny
            Principal:
              AWS: '*'
            Resource: !Sub
              - arn:aws:s3:::${bucketName}/*
              - bucketName: !Ref JsonWebKeysBucketAccessLogs
          - Action:
              - s3:PutObject
            Condition:
              ArnLike:
                aws:SourceArn: !GetAtt JsonWebKeysBucket.Arn
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Resource: !Sub
              - arn:aws:s3:::${bucketName}/*
              - bucketName: !Ref JsonWebKeysBucketAccessLogs
        Version: "2012-10-17"

  JsonWebKeysBucketApiRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                Effect: Allow
                Resource:
                  - !Sub ${JsonWebKeysBucket.Arn}/.well-known/jwks.json
            Version: "2012-10-17"
          PolicyName: JsonWebKeysBucketPolicy
      RoleName: !Sub ${AWS::StackName}-jwks-bucket

  JsonWebKeysBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref JsonWebKeysBucket
      PolicyDocument:
        Statement:
          - Action: '*'
            Condition:
              Bool:
                aws:SecureTransport: false
            Effect: Deny
            Principal:
              AWS: '*'
            Resource: !Sub
              - arn:aws:s3:::${bucketName}/*
              - bucketName: !Ref JsonWebKeysBucket
        Version: "2012-10-17"

  JsonWebKeysCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      LambdaVersion: !Ref JsonWebKeysFunction.Version
      ServiceTimeout: 30
      ServiceToken: !GetAtt JsonWebKeysFunction.Arn

  JsonWebKeysFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - JsonWebKeysFunctionLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/jwks/jwksHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2020
    Properties:
      Description: Convert ID Check public encryption keys to JWKS format and upload to S3
      Environment:
        Variables:
          ENCRYPTION_KEY_ID: !Ref KMSEncryptionKey
          JWKS_BUCKET_NAME: !Ref JsonWebKeysBucket
          JWKS_FILE_NAME: .well-known/jwks.json
          VERIFIABLE_CREDENTIAL_SIGNING_KEY_ID: !Ref VerifiableCredentialSigningKey
      FunctionName: !Sub ${AWS::StackName}-jwks
      Handler: jwksHandler.lambdaHandler
      ReservedConcurrentExecutions: !FindInMap
        - Lambda
        - !Ref Environment
        - JsonWebKeysReservedConcurrentExecutions
      Role: !GetAtt JsonWebKeysFunctionLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  JsonWebKeysFunctionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      Description: Role of JWKS function
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:PutObject
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:s3:::${TargetBucket}/*
                    - TargetBucket: !Ref JsonWebKeysBucket
            Version: "2012-10-17"
          PolicyName: UploadPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:GetPublicKey
                Effect: Allow
                Resource:
                  - !GetAtt KMSEncryptionKey.Arn
                  - !GetAtt VerifiableCredentialSigningKey.Arn
          PolicyName: GetPublicKeyPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: LoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-jwks-lambda

  JsonWebKeysFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-jwks
      RetentionInDays: 30

  JsonWebKeysFunctionSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref JsonWebKeysFunctionLogGroup
    Condition: isNotDev

  KMSEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for encrypting.
      Enabled: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
        Version: "2012-10-17"
      KeySpec: RSA_2048
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays

  KMSEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-encryption-key
      TargetKeyId: !Ref KMSEncryptionKey

  KMSSigningKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A key used in the client credential grant flow for signing the access token.
      EnableKeyRotation: false
      Enabled: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
        Version: "2012-10-17"
      KeySpec: ECC_NIST_P256
      KeyUsage: SIGN_VERIFY
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays

  KMSSigningKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-signing-key
      TargetKeyId: !Ref KMSSigningKey

  Linear20PercentEvery1Minute:
    Type: AWS::CodeDeploy::DeploymentConfig
    Properties:
      ComputePlatform: Lambda
      DeploymentConfigName: !Sub ${AWS::StackName}-Linear20PercentEvery1Minute
      TrafficRoutingConfig:
        TimeBasedLinear:
          LinearInterval: 1
          LinearPercentage: 20
        Type: TimeBasedLinear

  LowJourneyCompletionAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
      - JourneysStartedMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Alarms when fewer than 10% of journeys have completed (VC issued) in the past 20 minutes. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-low-journey-completion
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 4
      EvaluationPeriods: 4
      InsufficientDataActions: []
      Metrics:
        - Id: journeysStarted
          MetricStat:
            Metric:
              MetricName: JourneysStarted
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: vcsIssued
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_VC_ISSUED
              MetricName: AsyncIssueBiometricCredentialMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 300
            Stat: Sum
          ReturnData: false
        - Expression: (vcsIssued/journeysStarted) * 100
          Id: journeyCompletionRate
          ReturnData: false
        - Expression: IF(FILL(journeysStarted, 0) >= 40, journeyCompletionRate, 100)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 10
      TreatMissingData: breaching
    Condition: DeployAlarms

  NullResource:
    Type: AWS::CloudFormation::WaitConditionHandle
    Condition: NeverDeploy

  PrivateApi:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${AsyncPrivateApiAccessLogs}
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      AlwaysDeploy: true
      Auth:
        ResourcePolicy:
          IntrinsicVpceWhitelist:
            - !ImportValue devplatform-vpc-ExecuteApiGatewayEndpointId
            - !If
              - IntegrateIpvCore
              - !FindInMap
                - PrivateApigw
                - !Ref Environment
                - IpvCoreVpceId
              - !Ref AWS::NoValue
            - !If
              - IntegratePerformanceTesting
              - !FindInMap
                - PrivateApigw
                - !Ref Environment
                - PerformanceTestingVpceId
              - !Ref AWS::NoValue
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openApiSpecs/async-private-spec.yaml
      Description: Private API gateway for Client Credentials flow
      EndpointConfiguration:
        Type: PRIVATE
        VPCEndpointIds:
          - !If
            - IntegrateIpvCore
            - !FindInMap
              - PrivateApigw
              - !Ref Environment
              - IpvCoreVpceId
            - !Ref AWS::NoValue
          - !If
            - IntegratePerformanceTesting
            - !FindInMap
              - PrivateApigw
              - !Ref Environment
              - PerformanceTestingVpceId
            - !Ref AWS::NoValue
      MethodSettings:
        - DataTraceEnabled: false
          HttpMethod: '*'
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
          ThrottlingBurstLimit: !FindInMap
            - PrivateApigw
            - !Ref Environment
            - ApiBurstLimit
          ThrottlingRateLimit: !FindInMap
            - PrivateApigw
            - !Ref Environment
            - ApiRateLimit
      Name: !Sub ${AWS::StackName}-private-api
      OpenApiVersion: 3.0.1
      StageName: !Ref Environment

  PrivateApiLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Latency on the Private API has reached 2500ms in each of the past five minutes. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-private-api-latency
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 5
      EvaluationPeriods: 5
      Metrics:
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: maxLatency
          MetricStat:
            Metric:
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
              MetricName: Latency
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Maximum
          ReturnData: false
        - Expression: IF(invocations<10,0,maxLatency)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 2500
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  ProxyApi:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn: !GetAtt ProxyApiAccessLogs.Arn
        Format: '{"requestId" : "$context.requestId","ip" : "$context.identity.sourceIp","requestTime" : "$context.requestTime","httpMethod" : "$context.httpMethod","path" : "$context.path","routeKey" : "$context.routeKey","status" : "$context.status","protocol" : "$context.protocol","responseLength" : "$context.responseLength","integrationError" : "$context.integrationErrorMessage"}'
      Auth:
        ApiKeyRequired: false
        DefaultAuthorizer: AWS_IAM
        ResourcePolicy:
          CustomStatements:
            - Action:
                - execute-api:Invoke
              Effect: Allow
              Principal:
                AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
              Resource: !Sub execute-api:/*
              Sid: AllowAccountAccessToAllEndpoints
            - Action:
                - execute-api:Invoke
              Effect: Allow
              Principal:
                AWS: !FindInMap
                  - ProxyApigw
                  - !Ref Environment
                  - perfTesterRoleArn
              Resource: !Sub execute-api:/*
              Sid: AllowPerfTesterRoleAccess
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openApiSpecs/async-proxy-private-spec.yaml
      Description: Regional equivalent of the private Api to enable testing from outside AWS
      EndpointConfiguration: REGIONAL
      MethodSettings:
        - HttpMethod: '*'
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
          ThrottlingBurstLimit: !FindInMap
            - ProxyApigw
            - !Ref Environment
            - ApiBurstLimit
          ThrottlingRateLimit: !FindInMap
            - ProxyApigw
            - !Ref Environment
            - ApiRateLimit
      Name: !Sub ${AWS::StackName}-proxy-api
      StageName: !Ref Environment
    Condition: ProxyApiDeployment

  ProxyApiAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-proxy-api-access-logs
      RetentionInDays: 30
    Condition: ProxyApiDeployment

  ProxyApiBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref ProxyApiDomainName
      RestApiId: !Ref ProxyApi
      Stage: !Ref ProxyApi.Stage
    Condition: ProxyApiDeployment

  ProxyApiDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !If
        - DevelopmentStack
        - !Sub
          - proxy-${AWS::StackName}.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        - !Sub
          - proxy.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: !If
        - DevelopmentStack
        - !Sub '{{resolve:ssm:/${Environment}/Platform/ACM/AsyncPrimaryZoneWildcardCertificateV1ARN}}'
        - !Sub '{{resolve:ssm:/${Environment}/Platform/ACM/AsyncPrimaryZoneProxyCertificateV2ARN}}'
      SecurityPolicy: TLS_1_2
    Condition: ProxyApiDeployment

  ProxyApiRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt ProxyApiDomainName.RegionalDomainName
        HostedZoneId: !GetAtt ProxyApiDomainName.RegionalHostedZoneId
      HostedZoneId: !Sub '{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}'
      Name: !Ref ProxyApiDomainName
      Type: A
    Condition: ProxyApiDeployment

  ProxyApiSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref ProxyApiAccessLogs
    Condition: DeployProxyCsls

  ProxyLambda:
    Type: AWS::Serverless::Function
    DependsOn:
      - ProxyLambdaLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/proxy/proxyHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      Environment:
        Variables:
          PRIVATE_API_URL: !Sub https://${PrivateApi.RestApiId}.execute-api.eu-west-2.amazonaws.com/${Environment}
      FunctionName: !Sub ${AWS::StackName}-proxy-lambda
      Handler: proxyHandler.lambdaHandler
      Role: !GetAtt ProxyLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !Ref ProxyLambdaSecurityGroup
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC
    Condition: ProxyApiDeployment

  ProxyLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-proxy-lambda
      RetentionInDays: 30
    Condition: ProxyApiDeployment

  ProxyLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ProxyLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ProxyApi}/*/*/*
    Condition: ProxyApiDeployment

  ProxyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: !GetAtt ProxyLambdaLogGroup.Arn
            Version: "2012-10-17"
          PolicyName: ProxyFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-proxy-lambda-role
    Condition: ProxyApiDeployment

  ProxyLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Lambda Security group ruleset.
      GroupName: !Sub ${AWS::StackName}-proxy-sg
      SecurityGroupEgress:
        - CidrIp: !ImportValue devplatform-vpc-VpcCidr
          Description: TCP HTTPS outbound to vpc.
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId: !ImportValue devplatform-vpc-VpcId
    Condition: ProxyApiDeployment

  ProxyLambdaSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref ProxyLambdaLogGroup
    Condition: DeployProxyCsls

  ProxyLambdaThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Trigger an alarm if the Proxy Lambda throttles. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-proxy-lambda-throttle
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref ProxyLambda
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployProxyAlarms

  SessionsApi:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${SessionsApiAccessLogs}
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openApiSpecs/async-public-spec.yaml
      Description: Regional API gateway for Client Credentials flow
      EndpointConfiguration: REGIONAL
      MethodSettings:
        - DataTraceEnabled: false
          HttpMethod: '*'
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
          ThrottlingBurstLimit: !FindInMap
            - SessionsApigw
            - !Ref Environment
            - ApiBurstLimit
          ThrottlingRateLimit: !FindInMap
            - SessionsApigw
            - !Ref Environment
            - ApiRateLimit
      Name: !Sub ${AWS::StackName}-sessions-api
      OpenApiVersion: 3.0.1
      StageName: !Ref Environment
      Tags:
        FMSRegionalPolicy: false

  SessionsApiAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-sessions-api-access-logs
      RetentionInDays: 30

  SessionsApiBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref SessionsApiDomainName
      RestApiId: !Ref SessionsApi
      Stage: !Ref SessionsApi.Stage

  SessionsApiDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !If
        - DevelopmentStack
        - !Sub
          - sessions-${AWS::StackName}.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        - !Sub
          - sessions.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: !If
        - DevelopmentStack
        - !Sub '{{resolve:ssm:/${Environment}/Platform/ACM/AsyncPrimaryZoneWildcardCertificateV1ARN}}'
        - !Sub '{{resolve:ssm:/${Environment}/Platform/ACM/AsyncPrimaryZoneSessionsCertificateV2ARN}}'
      SecurityPolicy: TLS_1_2

  SessionsApiLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Latency on the Sessions API has reached 2500ms in each of the past five minutes. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-sessions-api-latency
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 5
      EvaluationPeriods: 5
      Metrics:
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: maxLatency
          MetricStat:
            Metric:
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
              MetricName: Latency
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Maximum
          ReturnData: false
        - Expression: IF(invocations<10,0,maxLatency)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 2500
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  SessionsApiOriginRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt SessionsApiDomainName.RegionalDomainName
        HostedZoneId: !GetAtt SessionsApiDomainName.RegionalHostedZoneId
      HostedZoneId: !Sub '{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}'
      Name: !Sub origin.${SessionsApiDomainName}
      Type: A

  SessionsApiRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !ImportValue
          Fn::Sub: ${AWS::StackName}-cf-dist-DistributionDomain
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !Sub '{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}'
      Name: !Ref SessionsApiDomainName
      Type: A

  SessionsApiSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref SessionsApiAccessLogs
    Condition: isNotDev

  SessionsApiWebAclAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Sub
        - arn:aws:apigateway:${AWS::Region}::/restapis/${SessionsApi}/stages/${ApiStage}
        - ApiStage: !Ref SessionsApi.Stage
      WebACLArn: !ImportValue
        Fn::Sub: ${AWS::StackName}-cf-dist-CloakingOriginWebACLArn

  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
        - AttributeName: subjectIdentifier
          AttributeType: S
        - AttributeName: timeToLive
          AttributeType: N
        - AttributeName: createdAt
          AttributeType: N
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: subjectIdentifier-timeToLive-index
          KeySchema:
            - AttributeName: subjectIdentifier
              KeyType: HASH
            - AttributeName: timeToLive
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - sessionState
              - redirectUri
              - clientState
            ProjectionType: INCLUDE
        - IndexName: subjectIdentifier-createdAt-index
          KeySchema:
            - AttributeName: subjectIdentifier
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - sessionState
              - redirectUri
              - clientState
            ProjectionType: INCLUDE
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true
      TableName: !Sub ${AWS::StackName}-sessions-table-${Environment}
      TimeToLiveSpecification:
        AttributeName: timeToLive
        Enabled: true

  TxMAKMSEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for encrypting the SQS Queue for TxMA
      Enabled: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
          - Action:
              - kms:Decrypt
            Effect: Allow
            Principal:
              AWS: !FindInMap
                - TxMA
                - !Ref Environment
                - TxmaAccount
            Resource:
              - '*'
        Version: "2012-10-17"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays

  TxMAKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-TxMAKMSEncryptionKey
      TargetKeyId: !Ref TxMAKMSEncryptionKey

  TxMASqs:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref TxMAKeyAlias
      MessageRetentionPeriod: 604800
      QueueName: !Sub ${AWS::StackName}-txma
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TxMASqsDlq.Arn
        maxReceiveCount: 5
      VisibilityTimeout: 60

  TxMASqsDlq:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Sub TxMAKMSEncryptionKey
      MessageRetentionPeriod: 259200
      QueueName: !Sub ${AWS::StackName}-txma-dlq

  TxMASqsPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ChangeMessageVisibility
              - sqs:ReceiveMessage
            Effect: Allow
            Principal:
              AWS:
                - !FindInMap
                  - TxMA
                  - !Ref Environment
                  - TxmaAccount
            Resource:
              - !GetAtt TxMASqs.Arn
        Version: "2012-10-17"
      Queues:
        - !Ref TxMASqs
    Condition: isNotDevOrBuild

  VendorProcessingDlq:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref VendorProcessingKeyAlias
      MessageRetentionPeriod: 1209600
      QueueName: !Sub ${AWS::StackName}-vendor-processing-dlq

  VendorProcessingDlqAgeOfOldestMessageHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Trigger an alarm when the age of the oldest message in Vendor Processing SQS DLQ is 10 days or older. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-vendor-processing-dlq-age-of-oldest-message
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value: !GetAtt VendorProcessingDlq.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Period: 60
      Statistic: Maximum
      Threshold: 864000
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  VendorProcessingDlqAgeOfOldestMessageLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Trigger an alarm when the age of the oldest message in Vendor Processing SQS DLQ is 3 days or older. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-vendor-processing-dlq-age-of-oldest-message
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value: !GetAtt VendorProcessingDlq.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Maximum
      Threshold: 259200
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  VendorProcessingDlqMessageVisibleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Trigger an alarm when new message gets added to Vendor Processing SQS DLQ. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-vendor-processing-dlq-message-visible
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value: !GetAtt VendorProcessingDlq.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Maximum
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  VendorProcessingKMSEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for encrypting the Vendor Processing SQS
      EnableKeyRotation: true
      Enabled: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
        Version: "2012-10-17"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays

  VendorProcessingKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-VendorProcessingKMSEncryptionKey
      TargetKeyId: !Ref VendorProcessingKMSEncryptionKey

  VendorProcessingSqs:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 5
      KmsMasterKeyId: !Ref VendorProcessingKeyAlias
      MessageRetentionPeriod: 1209600
      QueueName: !Sub ${AWS::StackName}-vendor-processing
      ReceiveMessageWaitTimeSeconds: 5
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt VendorProcessingDlq.Arn
        maxReceiveCount: 360
      VisibilityTimeout: 10

  VendorProcessingSqsAgeOfOldestMessageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Trigger an alarm when the age of the oldest message in Vendor Processing SQS queue is 30 minutes or older. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-vendor-processing-sqs-age-of-oldest-message
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value: !GetAtt VendorProcessingSqs.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Maximum
      Threshold: 1800
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  VerifiableCredentialSigningKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS Key for signing Verifiable Credentials
      EnableKeyRotation: false
      Enabled: true
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource: '*'
            Sid: RootAccess
        Version: "2012-10-17"
      KeySpec: ECC_NIST_P256
      KeyUsage: SIGN_VERIFY
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays

  VerifiableCredentialSigningKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-verifiable-credential-signing-key
      TargetKeyId: !Ref VerifiableCredentialSigningKey

  WellKnown5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /.well-known/jwks.json endpoint. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-high-threshold-well-known-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  WellKnown5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /.well-known/jwks.json endpoint. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-well-known-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  ZeroJourneysStartedAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - JourneysStartedMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 'Alarms when no journeys have been started successfully in the past 25 minutes. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-zero-journeys-started
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: JourneysStarted
      Namespace: !Sub ${AWS::StackName}/LogMessages
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 1500
      Statistic: Sum
      Threshold: 0
      TreatMissingData: breaching
    Condition: DeployAlarms

  ZeroVcsIssuedAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - AsyncIssueBiometricCredentialMetricFilter
      - JourneysStartedMetricFilter
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      AlarmDescription: !Sub
        - 'Alarms when there have been 0 Verifiable Credentials issued and written onto the IPVCore outbound queue in the past 20 minutes. See support manual: ${SupportManualUrl}'
        - SupportManualUrl: !FindInMap
            - StaticVariables
            - urls
            - SupportManual
      AlarmName: !Sub ${AWS::StackName}-zero-vcs-issued
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 4
      EvaluationPeriods: 4
      InsufficientDataActions: []
      Metrics:
        - Id: journeysStarted
          MetricStat:
            Metric:
              MetricName: JourneysStarted
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: vcsIssued
          MetricStat:
            Metric:
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ISSUE_BIOMETRIC_CREDENTIAL_VC_ISSUED
              MetricName: AsyncIssueBiometricCredentialMessageCode
              Namespace: !Sub ${AWS::StackName}/LogMessages
            Period: 300
            Stat: Sum
          ReturnData: false
        - Expression: IF(FILL(journeysStarted, 0) >= 25, vcsIssued, 1)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical
      Threshold: 0
      TreatMissingData: breaching
    Condition: DeployAlarms

Outputs:
  EventsApiUrl:
    Description: Events API Gateway base URL
    Value: !If
      - UseDevOverrideEventsBaseUrl
      - !Ref DevOverrideEventsBaseUrl
      - !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - EventsBaseUrl
    Condition: IsDevOrBuild

  IPVCoreKmsEncryptionKeyArn:
    Description: IPV Core KMS Encryption Key ARN
    Value: !GetAtt IPVCoreKMSEncryptionKey.Arn
    Export:
      Name: !Sub ${AWS::StackName}-ipv-core-kms-encryption-key-arn
    Condition: IsDevOrBuild

  IPVCoreOutboundSqsArn:
    Description: IPV Core Queue ARN
    Value: !GetAtt IPVCoreOutboundSqs.Arn
    Export:
      Name: !Sub ${AWS::StackName}-ipv-core-outbound-sqs-arn
    Condition: IsDevOrBuild

  PrivateApiUrl:
    Description: Private API Gateway base URL
    Value: !Sub https://${PrivateApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}

  ProxyApiUrl:
    Description: Proxy API Gateway Pretty DNS
    Value: !Sub https://${ProxyApiDomainName}
    Condition: ProxyApiDeployment

  ReadIdMockApiUrl:
    Description: ReadID Mock API Gateway base URL
    Value: !If
      - UseDevOverrideReadIdMockBaseUrl
      - !Ref DevOverrideReadIdMockBaseUrl
      - !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - ReadIdMockBaseUrl
    Condition: IsDevOrBuild

  SessionsApiUrl:
    Description: Sessions API Gateway base URL
    Value: !Sub https://${SessionsApiDomainName}

  StsMockApiUrl:
    Description: STS Mock API Gateway base URL
    Value: !If
      - UseDevOverrideStsBaseUrl
      - !Ref DevOverrideStsBaseUrl
      - !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - STSBASEURL
    Condition: IsDevOrBuild

  TestResourcesApiUrl:
    Description: Test Resources API Gateway base URL
    Value: !If
      - UseDevOverrideTestResourcesBaseUrl
      - !Ref DevOverrideTestResourcesBaseUrl
      - !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - TestResourcesBaseUrl
    Condition: IsDevOrBuild

  TxmaKmsEncryptionKeyArn:
    Description: TxMA KMS Encryption Key ARN
    Value: !GetAtt TxMAKMSEncryptionKey.Arn
    Export:
      Name: !Sub ${AWS::StackName}-txma-kms-encryption-key-arn
    Condition: IsDevOrBuild

  TxmaSqsArn:
    Description: TxMA SQS Queue ARN
    Value: !GetAtt TxMASqs.Arn
    Export:
      Name: !Sub ${AWS::StackName}-txma-sqs-arn
    Condition: IsDevOrBuild
