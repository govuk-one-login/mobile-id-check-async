AWSTemplateFormatVersion: "2010-09-09"

Description: async-backend SAM template for the ID Check v2 app

Parameters:
  CodeSigningConfigArn:
    Description: |
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Type: String
    Default: none

  DeployAlarmsInDev:
    Description: Set to `true` to deploy alarms in a dev environment
    Type: String
    Default: false

  DevOverrideEventsBaseUrl:
    Description: |
      Override the EventsBaseUrl value for development deployments
    Type: String
    Default: none

  DevOverrideReadIdBaseUrl:
    Description: |
      Override the ReadIdBaseUrl value for development deployments
    Type: String
    Default: none

  DevOverrideStsBaseUrl:
    Description: |
      Override the STS_BASE_URL value for development deployments
    Type: String
    Default: none

  Environment:
    Description: The environment type
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
    Default: dev

  PermissionsBoundary:
    Description: |
      The ARN of the permissions boundary to apply to any role created by the template
    Type: String
    Default: none

  SamValidateLintWorkaround:
    Description: Do not update or override. This allows the definition of a resource that is never deployed.
    Type: String
    Default: unused

Mappings:
  DNS:
    build:
      BaseDns: review-b-async.build.account.gov.uk
    dev:
      BaseDns: review-b-async.dev.account.gov.uk
    integration:
      BaseDns: review-b-async.integration.account.gov.uk
    production:
      BaseDns: review-b-async.account.gov.uk
    staging:
      BaseDns: review-b-async.staging.account.gov.uk

  EnvironmentConfiguration:
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables

  EnvironmentVariables:
    build:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /build/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /build/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /build/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      ClientRegistrySecretPath: build/clientRegistry
      EventsBaseUrl: https://events.review-b-async.build.account.gov.uk
      ReadIdBaseUrl: https://readid-proxy.review-b-async.build.account.gov.uk/v2
      STSBASEURL: https://sts-mock.review-b-async.build.account.gov.uk
    dev:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /dev/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /dev/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /dev/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      ClientRegistrySecretPath: dev/clientRegistry
      EventsBaseUrl: https://events.review-b-async.dev.account.gov.uk
      ReadIdBaseUrl: https://readid-proxy.review-b-async.dev.account.gov.uk/v2
      STSBASEURL: https://sts-mock.review-b-async.dev.account.gov.uk
    integration:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /integration/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /integration/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /integration/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      ClientRegistrySecretPath: integration/clientRegistry
      ReadIdBaseUrl: https://readid-proxy.review-b-async.integration.account.gov.uk
      STSBASEURL: https://token.integration.account.gov.uk
    production:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /production/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /production/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /production/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      ClientRegistrySecretPath: production/clientRegistry
      ReadIdBaseUrl: https://readid-proxy.review-b-async.account.gov.uk
      STSBASEURL: https://token.account.gov.uk
    staging:
      BiometricSubmitterKeySecretCacheDurationInSeconds: 900
      BiometricSubmitterKeySecretPathBrp: /staging/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_BRP
      BiometricSubmitterKeySecretPathDl: /staging/BIOMETRIC_SUBMITTER_ACCESS_KEY_DL
      BiometricSubmitterKeySecretPathPassport: /staging/BIOMETRIC_SUBMITTER_ACCESS_KEY_NFC_PASSPORT
      ClientRegistrySecretPath: staging/clientRegistry
      ReadIdBaseUrl: https://readid-proxy.review-b-async.staging.account.gov.uk
      STSBASEURL: https://token.staging.account.gov.uk

  KMS:
    build:
      PendingDeletionInDays: 30
    dev:
      PendingDeletionInDays: 7
    integration:
      PendingDeletionInDays: 30
    production:
      PendingDeletionInDays: 30
    staging:
      PendingDeletionInDays: 30

  Lambda:
    build:
      LogLevel: INFO
      ReservedConcurrentExecutions: 15
    dev:
      LogLevel: DEBUG
      ReservedConcurrentExecutions: 0
    integration:
      LogLevel: INFO
      ReservedConcurrentExecutions: 0
    production:
      LogLevel: INFO
      ReservedConcurrentExecutions: 0
    staging:
      LogLevel: INFO
      ReservedConcurrentExecutions: 15

  PrivateApigw:
    build:
      ApiBurstLimit: 10
      ApiRateLimit: 10
      IpvCoreVpceId: ""
    dev:
      ApiBurstLimit: 10
      ApiRateLimit: 10
      IpvCoreVpceId: ""
    integration:
      ApiBurstLimit: 0
      ApiRateLimit: 0
      IpvCoreVpceId: ""
    production:
      ApiBurstLimit: 0
      ApiRateLimit: 0
      IpvCoreVpceId: ""
    staging:
      ApiBurstLimit: 10
      ApiRateLimit: 10
      IpvCoreVpceId: vpce-0555f751a645d7639

  ProxyApigw:
    build:
      ApiBurstLimit: 10
      ApiRateLimit: 10
    dev:
      ApiBurstLimit: 10
      ApiRateLimit: 10
    integration:
      ApiBurstLimit: 0
      ApiRateLimit: 0
    production:
      ApiBurstLimit: 0
      ApiRateLimit: 0
    staging:
      ApiBurstLimit: 10
      ApiRateLimit: 10

  SessionsApigw:
    build:
      ApiBurstLimit: 10
      ApiRateLimit: 10
    dev:
      ApiBurstLimit: 10
      ApiRateLimit: 10
    integration:
      ApiBurstLimit: 0
      ApiRateLimit: 0
    production:
      ApiBurstLimit: 0
      ApiRateLimit: 0
    staging:
      ApiBurstLimit: 10
      ApiRateLimit: 10

  StaticVariables:
    urls:
      CriticalAlarmsRunbook: https://govukverify.atlassian.net/wiki/spaces/DCMAW/pages/4799594677/Alarms+Runbook+Alerts
      WarningAlarmsRunbook: https://govukverify.atlassian.net/wiki/spaces/DCMAW/pages/4800446694/Alarms+Runbook+Warnings

  TxMA:
    build:
      TxmaAccount: arn:aws:iam::750703655225:root
    dev:
      TxmaAccount: arn:aws:iam::248098332657:root
    integration:
      TxmaAccount: arn:aws:iam::729485541398:root
    production:
      TxmaAccount: arn:aws:iam::451773080033:root
    staging:
      TxmaAccount: arn:aws:iam::178023842775:root

Conditions:
  DeployAlarms: !Or
    - !Not
      - !Equals
        - !Ref Environment
        - dev
    - !Equals
      - !Ref DeployAlarmsInDev
      - true

  DevelopmentStack: !And
    - !Equals
      - !Ref Environment
      - dev
    - !Not
      - !Equals
        - !Ref AWS::StackName
        - mob-async-backend

  IntegrateIpvCore: !Equals
    - !Ref Environment
    - staging

  IsDevOrBuild: !Or
    - !Equals
      - !Ref Environment
      - dev
    - !Equals
      - !Ref Environment
      - build

  NeverDeploy: !Equals
    - !Ref SamValidateLintWorkaround
    - Should always equal false

  ProxyApiDeployment: !Or
    - !Equals
      - !Ref Environment
      - dev
    - !Equals
      - !Ref Environment
      - build

  UseCodeSigning: !Not
    - !Equals
      - !Ref CodeSigningConfigArn
      - none

  UseDevOverrideEventsBaseUrl: !Not
    - !Equals
      - !Ref DevOverrideEventsBaseUrl
      - none

  UseDevOverrideReadIdBaseUrl: !Not
    - !Equals
      - !Ref DevOverrideReadIdBaseUrl
      - none

  UseDevOverrideStsBaseUrl: !Not
    - !Equals
      - !Ref DevOverrideStsBaseUrl
      - none

  UsePermissionsBoundary: !Not
    - !Equals
      - !Ref PermissionsBoundary
      - none

  isDev: !Equals
    - !Ref Environment
    - dev

  isNotDevOrBuild: !Or
    - !Equals
      - !Ref Environment
      - staging
    - !Equals
      - !Ref Environment
      - integration
    - !Equals
      - !Ref Environment
      - production

Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Architectures:
      - arm64
    AutoPublishAlias: live
    AutoPublishAliasAllProperties: true
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CLUSTER_ID: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        DT_CONNECTION_BASE_URL: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
        DT_TENANT: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}'
          - SecretArn: !FindInMap
              - EnvironmentConfiguration
              - !Ref Environment
              - dynatraceSecretArn
        ISSUER: mockIssuer
        POWERTOOLS_SERVICE_NAME: mobile-id-check-async-backend
        SESSION_TABLE_NAME: !Ref SessionsTable
        SIGNING_KEY_ID: !GetAtt KMSSigningKey.Arn
        TXMA_SQS: !GetAtt TxMASQSQueue.QueueUrl
    Layers:
      - !Sub
        - '{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}'
        - SecretArn: !FindInMap
            - EnvironmentConfiguration
            - !Ref Environment
            - dynatraceSecretArn
    LoggingConfig:
      ApplicationLogLevel: !FindInMap
        - Lambda
        - !Ref Environment
        - LogLevel
      LogFormat: JSON
      SystemLogLevel: INFO
    MemorySize: 512
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    ReservedConcurrentExecutions: !If
      - isDev
      - !Ref AWS::NoValue
      - !FindInMap
        - Lambda
        - !Ref Environment
        - ReservedConcurrentExecutions
    Timeout: 5

Resources:
  AsyncActiveSession4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-active-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSession4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-active-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSession5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-active-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSession5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-active-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncActiveSessionFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncActiveSessionLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncActiveSession/asyncActiveSessionHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      Environment:
        Variables:
          AUDIENCE: !Sub https://${SessionsApiDomainName}
          ENCRYPTION_KEY_ARN: !GetAtt KMSEncryptionKey.Arn
          STS_BASE_URL: !If
            - UseDevOverrideStsBaseUrl
            - !Ref DevOverrideStsBaseUrl
            - !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - STSBASEURL
      Events:
        AsyncActiveSession:
          Properties:
            Method: get
            Path: /async/activeSession
            RestApiId: !Ref SessionsApi
          Type: Api
      FunctionName: !Sub ${AWS::StackName}-active-session
      Handler: asyncActiveSessionHandler.lambdaHandler
      Role: !GetAtt AsyncActiveSessionLambdaRole.Arn
      Runtime: nodejs20.x
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-ProtectedSubnetIdA
          - !ImportValue devplatform-vpc-ProtectedSubnetIdB
          - !ImportValue devplatform-vpc-ProtectedSubnetIdC

  AsyncActiveSessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncActiveSessionFunction.Arn
      Principal: events.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SessionsApi}/*/*/*

  AsyncActiveSessionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:Query
                Condition:
                  ForAllValues:StringEquals:
                    dynamodb:Attributes:
                      - sessionId
                      - sessionState
                      - subjectIdentifier
                      - timeToLive
                      - redirectUri
                      - clientState
                  StringEquals:
                    dynamodb:Select: SPECIFIC_ATTRIBUTES
                Effect: Allow
                Resource:
                  - !GetAtt SessionsTable.Arn
                  - !Sub ${SessionsTable.Arn}/index/subjectIdentifier-timeToLive-index
            Version: "2012-10-17"
          PolicyName: DynamoReadSessionsTable
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncActiveSessionFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Decrypt
                Effect: Allow
                Resource: !GetAtt KMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: KMSDecryptPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-active-session-lambda

  AsyncActiveSessionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-active-session
      RetentionInDays: 30

  AsyncBiometricToken4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/biometricToken endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-biometric-token-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricToken4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/biometricToken endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-biometric-token-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricToken5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/biometricToken endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-biometric-token-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricToken5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/biometricToken endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-biometric-token-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncBiometricTokenFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncBiometricTokenLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncBiometricToken/asyncBiometricTokenHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      Environment:
        Variables:
          BIOMETRIC_SUBMITTER_KEY_SECRET_CACHE_DURATION_IN_SECONDS: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricSubmitterKeySecretCacheDurationInSeconds
          BIOMETRIC_SUBMITTER_KEY_SECRET_PATH_BRP: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricSubmitterKeySecretPathBrp
          BIOMETRIC_SUBMITTER_KEY_SECRET_PATH_DL: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricSubmitterKeySecretPathDl
          BIOMETRIC_SUBMITTER_KEY_SECRET_PATH_PASSPORT: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - BiometricSubmitterKeySecretPathPassport
          READID_BASE_URL: !If
            - UseDevOverrideReadIdBaseUrl
            - !Ref DevOverrideReadIdBaseUrl
            - !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - ReadIdBaseUrl
      Events:
        AsyncBiometricToken:
          Properties:
            Method: post
            Path: /async/biometricToken
            RestApiId: !Ref SessionsApi
          Type: Api
      FunctionName: !Sub ${AWS::StackName}-biometric-token
      Handler: asyncBiometricTokenHandler.lambdaHandler
      Role: !GetAtt AsyncBiometricTokenLambdaRole.Arn
      Runtime: nodejs20.x
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-ProtectedSubnetIdA
          - !ImportValue devplatform-vpc-ProtectedSubnetIdB
          - !ImportValue devplatform-vpc-ProtectedSubnetIdC

  AsyncBiometricTokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncBiometricTokenFunction.Arn
      Principal: events.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SessionsApi}/*/*/*

  AsyncBiometricTokenLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncBiometricTokenFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${submitterKeyPathPassport}
                    - submitterKeyPathPassport: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - BiometricSubmitterKeySecretPathPassport
                  - !Sub
                    - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${submitterKeyPathBrp}
                    - submitterKeyPathBrp: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - BiometricSubmitterKeySecretPathBrp
                  - !Sub
                    - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${submitterKeyPathDl}
                    - submitterKeyPathDl: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - BiometricSubmitterKeySecretPathDl
            Version: "2012-10-17"
          PolicyName: AsyncBiometricTokenParameterStorePolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:UpdateItem
                Effect: Allow
                Resource: !GetAtt SessionsTable.Arn
          PolicyName: AsyncBiometricTokenFunctionDynamodbPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASQSQueue.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncBiometricTokenFunctionTxmaSQSPolicy
      RoleName: !Sub ${AWS::StackName}-biometric-token-lambda

  AsyncBiometricTokenLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-biometric-token
      RetentionInDays: 30

  AsyncCredential4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/credential endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-credential-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredential4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/credential endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-credential-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredential5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/credential endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-credential-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredential5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/credential endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-credential-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncCredentialFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncCredentialLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncCredential/asyncCredentialHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      Environment:
        Variables:
          CLIENT_REGISTRY_SECRET_NAME: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - ClientRegistrySecretPath
          SESSION_DURATION_IN_SECONDS: 3600
      FunctionName: !Sub ${AWS::StackName}-credential
      Handler: asyncCredentialHandler.lambdaHandler
      Role: !GetAtt AsyncCredentialLambdaRole.Arn
      Runtime: nodejs20.x
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  AsyncCredentialFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncCredentialFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PrivateApi}/*/*/*

  AsyncCredentialLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:Query
                Condition:
                  ForAllValues:StringEquals:
                    dynamodb:Attributes:
                      - sessionId
                      - sessionState
                      - subjectIdentifier
                      - timeToLive
                  StringEquals:
                    dynamodb:Select: SPECIFIC_ATTRIBUTES
                Effect: Allow
                Resource:
                  - !GetAtt SessionsTable.Arn
                  - !Sub ${SessionsTable.Arn}/index/subjectIdentifier-timeToLive-index
              - Action:
                  - dynamodb:PutItem
                Effect: Allow
                Resource: !GetAtt SessionsTable.Arn
            Version: "2012-10-17"
          PolicyName: DynamoReadSessionsTable
        - PolicyDocument:
            Statement:
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${clientRegistrySecretPath}-??????
                    - clientRegistrySecretPath: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - ClientRegistrySecretPath
            Version: "2012-10-17"
          PolicyName: AsyncCredentialFunctionSecretsManagerPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncCredentialFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Verify
                Effect: Allow
                Resource: !GetAtt KMSSigningKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncCredentialFunctionKmsPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASQSQueue.Arn
              - Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncCredentialFunctionSQSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-credential-lambda

  AsyncCredentialLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-credential
      RetentionInDays: 30

  AsyncCredentialPrivateApiAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-private-api-access-logs
      RetentionInDays: 30

  AsyncFinishBiometricSession4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/finishBiometricSession endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-finish-biometric-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSession4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/finishBiometricSession endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-finish-biometric-session-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSession5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/finishBiometricSession endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-finish-biometric-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSession5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/finishBiometricSession endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-finish-biometric-session-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncFinishBiometricSessionFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncFinishBiometricSessionLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncFinishBiometricSession/asyncFinishBiometricSessionHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      Events:
        AsyncFinishBiometricSession:
          Properties:
            Method: post
            Path: /async/finishBiometricSession
            RestApiId: !Ref SessionsApi
          Type: Api
      FunctionName: !Sub ${AWS::StackName}-finish-biometric-session
      Handler: asyncFinishBiometricSessionHandler.lambdaHandler
      Role: !GetAtt AsyncFinishBiometricSessionLambdaRole.Arn
      Runtime: nodejs20.x
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  AsyncFinishBiometricSessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncFinishBiometricSessionFunction.Arn
      Principal: events.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SessionsApi}/*/*/*

  AsyncFinishBiometricSessionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncFinishBiometricSessionFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:UpdateItem
                Effect: Allow
                Resource: !GetAtt SessionsTable.Arn
          PolicyName: AsyncFinishBiometricSessionFunctionDynamodbPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASQSQueue.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncBiometricTokenFunctionTxmaSQSPolicy
      RoleName: !Sub ${AWS::StackName}-finish-biometric-session-lambda

  AsyncFinishBiometricSessionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-finish-biometric-session
      RetentionInDays: 30

  AsyncToken4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/token endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-token-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncToken4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/token endpoint with a 4XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-token-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncToken5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /async/token endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-async-token-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncToken5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /async/token endpoint with a 5XX error. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-async-token-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  AsyncTokenFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AsyncTokenLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/asyncToken/asyncTokenHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      Environment:
        Variables:
          CLIENT_REGISTRY_SECRET_NAME: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - ClientRegistrySecretPath
      FunctionName: !Sub ${AWS::StackName}-token
      Handler: asyncTokenHandler.lambdaHandler
      Role: !GetAtt AsyncTokenLambdaRole.Arn
      Runtime: nodejs20.x
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  AsyncTokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AsyncTokenFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PrivateApi}/*/*/*

  AsyncTokenLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${clientRegistrySecretPath}-??????
                    - clientRegistrySecretPath: !FindInMap
                        - EnvironmentVariables
                        - !Ref Environment
                        - ClientRegistrySecretPath
            Version: "2012-10-17"
          PolicyName: AsyncTokenFunctionSecretsManagerPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: AsyncTokenFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Sign
                Effect: Allow
                Resource: !GetAtt KMSSigningKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncTokenFunctionKmsPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt TxMASQSQueue.Arn
              - Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt TxMAKMSEncryptionKey.Arn
            Version: "2012-10-17"
          PolicyName: AsyncTokenFunctionSQSPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-token-lambda

  AsyncTokenLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-token
      RetentionInDays: 30

  JsonWebKeysBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::StackName}-jwks-keys-${Environment}
      LoggingConfiguration:
        DestinationBucketName: !Ref JsonWebKeysBucketAccessLogs
        LogFilePrefix: !Sub ${AWS::StackName}-jwks-keys
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  JsonWebKeysBucketAccessLogs:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::StackName}-jwks-keys-access-logs-${Environment}
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  JsonWebKeysBucketAccessLogsPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref JsonWebKeysBucketAccessLogs
      PolicyDocument:
        Statement:
          - Action: '*'
            Condition:
              Bool:
                aws:SecureTransport: false
            Effect: Deny
            Principal:
              AWS: '*'
            Resource: !Sub
              - arn:aws:s3:::${bucketName}/*
              - bucketName: !Ref JsonWebKeysBucketAccessLogs
          - Action:
              - s3:PutObject
            Condition:
              ArnLike:
                aws:SourceArn: !GetAtt JsonWebKeysBucket.Arn
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Resource: !Sub
              - arn:aws:s3:::${bucketName}/*
              - bucketName: !Ref JsonWebKeysBucketAccessLogs
        Version: "2012-10-17"

  JsonWebKeysBucketApiRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                Effect: Allow
                Resource:
                  - !Sub ${JsonWebKeysBucket.Arn}/.well-known/jwks.json
            Version: "2012-10-17"
          PolicyName: JsonWebKeysBucketPolicy
      RoleName: !Sub ${AWS::StackName}-jwks-bucket

  JsonWebKeysBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref JsonWebKeysBucket
      PolicyDocument:
        Statement:
          - Action: '*'
            Condition:
              Bool:
                aws:SecureTransport: false
            Effect: Deny
            Principal:
              AWS: '*'
            Resource: !Sub
              - arn:aws:s3:::${bucketName}/*
              - bucketName: !Ref JsonWebKeysBucket
        Version: "2012-10-17"

  JsonWebKeysCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      LambdaVersion: !Ref JsonWebKeysFunction.Version
      ServiceTimeout: 30
      ServiceToken: !GetAtt JsonWebKeysFunction.Arn

  JsonWebKeysFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - JsonWebKeysFunctionLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/jwks/jwksHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2020
    Properties:
      Description: Convert ID Check public encryption keys to JWKS format and upload to S3
      Environment:
        Variables:
          ENCRYPTION_KEY_ID: !Ref KMSEncryptionKey
          JWKS_BUCKET_NAME: !Ref JsonWebKeysBucket
          JWKS_FILE_NAME: .well-known/jwks.json
      FunctionName: !Sub ${AWS::StackName}-jwks
      Handler: jwksHandler.lambdaHandler
      Role: !GetAtt JsonWebKeysFunctionLambdaRole.Arn
      Runtime: nodejs20.x
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC

  JsonWebKeysFunctionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      Description: Role of JWKS function
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:PutObject
                Effect: Allow
                Resource:
                  - !Sub
                    - arn:aws:s3:::${TargetBucket}/*
                    - TargetBucket: !Ref JsonWebKeysBucket
            Version: "2012-10-17"
          PolicyName: UploadPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:GetPublicKey
                Effect: Allow
                Resource: !GetAtt KMSEncryptionKey.Arn
          PolicyName: GetPublicKeyPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: LoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-jwks-lambda

  JsonWebKeysFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-jwks
      RetentionInDays: 30

  KMSEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for encrypting.
      Enabled: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
        Version: "2012-10-17"
      KeySpec: RSA_2048
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays

  KMSEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-encryption-key
      TargetKeyId: !Ref KMSEncryptionKey

  KMSSigningKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for signing.
      EnableKeyRotation: false
      Enabled: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
        Version: "2012-10-17"
      KeySpec: ECC_NIST_P256
      KeyUsage: SIGN_VERIFY
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays

  KMSSigningKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-signing-key
      TargetKeyId: !Ref KMSSigningKey

  NullResource:
    Type: AWS::CloudFormation::WaitConditionHandle
    Condition: NeverDeploy

  PrivateApi:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${AsyncCredentialPrivateApiAccessLogs}
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      Auth:
        ResourcePolicy:
          IntrinsicVpceWhitelist:
            - !ImportValue devplatform-vpc-ExecuteApiGatewayEndpointId
            - !If
              - IntegrateIpvCore
              - !FindInMap
                - PrivateApigw
                - !Ref Environment
                - IpvCoreVpceId
              - !Ref AWS::NoValue
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openApiSpecs/async-private-spec.yaml
      Description: Private API gateway for Client Credentials flow
      EndpointConfiguration:
        Type: PRIVATE
        VPCEndpointIds: !If
          - IntegrateIpvCore
          - - !FindInMap
              - PrivateApigw
              - !Ref Environment
              - IpvCoreVpceId
          - - !Ref AWS::NoValue
      MethodSettings:
        - DataTraceEnabled: false
          HttpMethod: '*'
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
          ThrottlingBurstLimit: !FindInMap
            - PrivateApigw
            - !Ref Environment
            - ApiBurstLimit
          ThrottlingRateLimit: !FindInMap
            - PrivateApigw
            - !Ref Environment
            - ApiRateLimit
      Name: !Sub ${AWS::StackName}-private-api
      OpenApiVersion: 3.0.1
      StageName: !Ref Environment

  ProxyApi:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn: !GetAtt ProxyApiAccessLogs.Arn
        Format: '{"requestId" : "$context.requestId","ip" : "$context.identity.sourceIp","requestTime" : "$context.requestTime","httpMethod" : "$context.httpMethod","path" : "$context.path","routeKey" : "$context.routeKey","status" : "$context.status","protocol" : "$context.protocol","responseLength" : "$context.responseLength","integrationError" : "$context.integrationErrorMessage"}'
      Auth:
        ApiKeyRequired: false
        DefaultAuthorizer: AWS_IAM
        ResourcePolicy:
          AwsAccountWhitelist: !Sub ${AWS::AccountId}
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openApiSpecs/async-proxy-private-spec.yaml
      Description: Regional equivalent of the private Api to enable testing from outside AWS
      EndpointConfiguration: REGIONAL
      MethodSettings:
        - HttpMethod: '*'
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
          ThrottlingBurstLimit: !FindInMap
            - ProxyApigw
            - !Ref Environment
            - ApiBurstLimit
          ThrottlingRateLimit: !FindInMap
            - ProxyApigw
            - !Ref Environment
            - ApiRateLimit
      Name: !Sub ${AWS::StackName}-proxy-api
      StageName: !Ref Environment
    Condition: ProxyApiDeployment

  ProxyApiAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-proxy-api-access-logs
      RetentionInDays: 30
    Condition: ProxyApiDeployment

  ProxyApiBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: ProxyApiDomainName
    Properties:
      DomainName: !If
        - DevelopmentStack
        - !Sub
          - proxy-${AWS::StackName}.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        - !Sub
          - proxy.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
      RestApiId: !Ref ProxyApi
      Stage: !Ref ProxyApi.Stage
    Condition: ProxyApiDeployment

  ProxyApiDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !If
        - DevelopmentStack
        - !Sub
          - proxy-${AWS::StackName}.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        - !Sub
          - proxy.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: !If
        - DevelopmentStack
        - !Sub '{{resolve:ssm:/${Environment}/Platform/ACM/AsyncPrimaryZoneWildcardCertificateV1ARN}}'
        - !Sub '{{resolve:ssm:/${Environment}/Platform/ACM/AsyncPrimaryZoneProxyCertificateV2ARN}}'
      SecurityPolicy: TLS_1_2
    Condition: ProxyApiDeployment

  ProxyApiRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt ProxyApiDomainName.RegionalDomainName
        HostedZoneId: !GetAtt ProxyApiDomainName.RegionalHostedZoneId
      HostedZoneId: !Sub '{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}'
      Name: !If
        - DevelopmentStack
        - !Sub
          - proxy-${AWS::StackName}.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        - !Sub
          - proxy.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
      Type: A
    Condition: ProxyApiDeployment

  ProxyLambda:
    Type: AWS::Serverless::Function
    DependsOn:
      - ProxyLambdaLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/functions/proxy/proxyHandler.ts
        Minify: true
        Sourcemap: false
        Target: es2022
    Properties:
      Environment:
        Variables:
          PRIVATE_API_URL: !Sub https://${PrivateApi.RestApiId}.execute-api.eu-west-2.amazonaws.com/${Environment}
      FunctionName: !Sub ${AWS::StackName}-proxy-lambda
      Handler: proxyHandler.lambdaHandler
      Role: !GetAtt ProxyLambdaRole.Arn
      Runtime: nodejs20.x
      VpcConfig:
        SecurityGroupIds:
          - !Ref ProxyLambdaSecurityGroup
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC
    Condition: ProxyApiDeployment

  ProxyLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-proxy-lambda
      RetentionInDays: 30
    Condition: ProxyApiDeployment

  ProxyLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ProxyLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ProxyApi}/*/*/*
    Condition: ProxyApiDeployment

  ProxyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: !GetAtt ProxyLambdaLogGroup.Arn
            Version: "2012-10-17"
          PolicyName: ProxyFunctionLoggingPolicy
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Effect: Allow
                Resource: '*'
            Version: "2012-10-17"
          PolicyName: VpcPolicy
      RoleName: !Sub ${AWS::StackName}-proxy-lambda-role
    Condition: ProxyApiDeployment

  ProxyLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Lambda Security group ruleset.
      GroupName: !Sub ${AWS::StackName}-proxy-sg
      SecurityGroupEgress:
        - CidrIp: !ImportValue devplatform-vpc-VpcCidr
          Description: TCP HTTPS outbound to vpc.
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId: !ImportValue devplatform-vpc-VpcId
    Condition: ProxyApiDeployment

  SessionsApi:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${SessionsApiAccessLogs}
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openApiSpecs/async-public-spec.yaml
      Description: Regional API gateway for Client Credentials flow
      EndpointConfiguration: REGIONAL
      MethodSettings:
        - DataTraceEnabled: false
          HttpMethod: '*'
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
          ThrottlingBurstLimit: !FindInMap
            - SessionsApigw
            - !Ref Environment
            - ApiBurstLimit
          ThrottlingRateLimit: !FindInMap
            - SessionsApigw
            - !Ref Environment
            - ApiRateLimit
      Name: !Sub ${AWS::StackName}-sessions-api
      OpenApiVersion: 3.0.1
      StageName: !Ref Environment
      Tags:
        FMSRegionalPolicy: false

  SessionsApiAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-sessions-api-access-logs
      RetentionInDays: 30

  SessionsApiBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: SessionsApiDomainName
    Properties:
      DomainName: !If
        - DevelopmentStack
        - !Sub
          - sessions-${AWS::StackName}.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        - !Sub
          - sessions.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
      RestApiId: !Ref SessionsApi
      Stage: !Ref SessionsApi.Stage

  SessionsApiDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !If
        - DevelopmentStack
        - !Sub
          - sessions-${AWS::StackName}.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        - !Sub
          - sessions.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: !If
        - DevelopmentStack
        - !Sub '{{resolve:ssm:/${Environment}/Platform/ACM/AsyncPrimaryZoneWildcardCertificateV1ARN}}'
        - !Sub '{{resolve:ssm:/${Environment}/Platform/ACM/AsyncPrimaryZoneSessionsCertificateV2ARN}}'
      SecurityPolicy: TLS_1_2

  SessionsApiOriginRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt SessionsApiDomainName.RegionalDomainName
        HostedZoneId: !GetAtt SessionsApiDomainName.RegionalHostedZoneId
      HostedZoneId: !Sub '{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}'
      Name: !If
        - DevelopmentStack
        - !Sub
          - origin.sessions-${AWS::StackName}.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        - !Sub
          - origin.sessions.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
      Type: A

  SessionsApiRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !ImportValue
          Fn::Sub: ${AWS::StackName}-cf-dist-DistributionDomain
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !Sub '{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}'
      Name: !If
        - DevelopmentStack
        - !Sub
          - sessions-${AWS::StackName}.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
        - !Sub
          - sessions.${DNS_RECORD}
          - DNS_RECORD: !FindInMap
              - DNS
              - !Ref Environment
              - BaseDns
      Type: A

  SessionsApiWebAclAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Sub
        - arn:aws:apigateway:${AWS::Region}::/restapis/${SessionsApi}/stages/${ApiStage}
        - ApiStage: !Ref SessionsApi.Stage
      WebACLArn: !ImportValue
        Fn::Sub: ${AWS::StackName}-cf-dist-CloakingOriginWebACLArn

  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
        - AttributeName: subjectIdentifier
          AttributeType: S
        - AttributeName: timeToLive
          AttributeType: N
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: subjectIdentifier-timeToLive-index
          KeySchema:
            - AttributeName: subjectIdentifier
              KeyType: HASH
            - AttributeName: timeToLive
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - sessionState
              - redirectUri
              - clientState
            ProjectionType: INCLUDE
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true
      TableName: !Sub ${AWS::StackName}-sessions-table-${Environment}
      TimeToLiveSpecification:
        AttributeName: timeToLive
        Enabled: true

  TxMAKMSEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for encrypting the SQS Queue for TxMA
      Enabled: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
          - Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey
            Effect: Allow
            Principal:
              AWS: !FindInMap
                - TxMA
                - !Ref Environment
                - TxmaAccount
            Resource:
              - '*'
        Version: "2012-10-17"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays

  TxMAKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-TxMAKMSEncryptionKey
      TargetKeyId: !Ref TxMAKMSEncryptionKey

  TxMASQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref TxMAKeyAlias
      MessageRetentionPeriod: 604800
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TxMASQSQueueDeadLetterQueue.Arn
        maxReceiveCount: 5
      VisibilityTimeout: 60

  TxMASQSQueueDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Sub TxMAKMSEncryptionKey
      MessageRetentionPeriod: 259200

  TxMASQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ChangeMessageVisibility
              - sqs:ReceiveMessage
            Effect: Allow
            Principal:
              AWS:
                - !FindInMap
                  - TxMA
                  - !Ref Environment
                  - TxmaAccount
            Resource:
              - !GetAtt TxMASQSQueue.Arn
        Version: "2012-10-17"
      Queues:
        - !Ref TxMASQSQueue
    Condition: isNotDevOrBuild

  WellKnown5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /.well-known/jwks.json endpoint. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - CriticalAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-well-known-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  WellKnown5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /.well-known/jwks.json endpoint. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-well-known-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

Outputs:
  EventsApiUrl:
    Description: Events API Gateway base URL
    Value: !If
      - UseDevOverrideEventsBaseUrl
      - !Ref DevOverrideEventsBaseUrl
      - !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - EventsBaseUrl
    Condition: IsDevOrBuild

  PrivateApiUrl:
    Description: Private API Gateway base URL
    Value: !Sub https://${PrivateApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}

  ProxyApiUrl:
    Description: Proxy API Gateway Pretty DNS
    Value: !Sub https://${ProxyApiDomainName}
    Condition: ProxyApiDeployment

  SessionsApiUrl:
    Description: Sessions API Gateway base URL
    Value: !Sub https://${SessionsApiDomainName}

  StsMockApiUrl:
    Description: STS Mock API Gateway base URL
    Value: !If
      - UseDevOverrideStsBaseUrl
      - !Ref DevOverrideStsBaseUrl
      - !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - STSBASEURL
    Condition: IsDevOrBuild

  TxmaKmsEncryptionKeyArn:
    Description: TxMA KMS Encryption Key ARN
    Value: !GetAtt TxMAKMSEncryptionKey.Arn
    Export:
      Name: !Sub ${AWS::StackName}-txma-kms-encryption-key-arn
    Condition: IsDevOrBuild

  TxmaSqsQueueArn:
    Description: TxMA SQS Queue ARN
    Value: !GetAtt TxMASQSQueue.Arn
    Export:
      Name: !Sub ${AWS::StackName}-txma-sqs-queue-arn
    Condition: IsDevOrBuild
