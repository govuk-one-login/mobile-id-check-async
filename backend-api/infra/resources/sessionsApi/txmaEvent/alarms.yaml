AWSTemplateFormatVersion: "2010-09-09"
Resources:
  AsyncTxmaEvent4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/txmaEvent endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [ StaticVariables, WarningAlarmsRunbook ]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-txma-event-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncTxmaEvent4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/txmaEvent endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [ StaticVariables, WarningAlarmsRunbook ]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-txma-event-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncTxmaEvent5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/txmaEvent endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [ StaticVariables, WarningAlarmsRunbook ]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-txma-event-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncTxmaEvent5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/txmaEvent endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [ StaticVariables, WarningAlarmsRunbook ]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-txma-event-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncTxmaEventConcurrencyReachingLimitAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-txma-event-concurrency-reaching-limit"
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      InsufficientDataActions: [ ]
      AlarmDescription: !Sub
        - "Reserved concurrency usage for Async Txma Event lambda has exceeded 80%. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [ StaticVariables, WarningAlarmsRunbook ]
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncTxmaEventFunction
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 64
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  AsyncTxmaEventThrottleAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "${AWS::StackName}-txma-event-lambda-throttle"
      AlarmDescription: !Sub
        - "Trigger an alarm if the Async TxMA Event Lambda throttles. See support manual: ${SupportManualUrl}"
        - SupportManualUrl: !FindInMap [ StaticVariables, SupportManual ]
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical"
      InsufficientDataActions: [ ]
      Namespace: AWS/Lambda
      MetricName: Throttles
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncTxmaEventFunction
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Period: 60
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      TreatMissingData: notBreaching
