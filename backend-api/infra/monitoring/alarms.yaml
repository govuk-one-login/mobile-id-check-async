AWSTemplateFormatVersion: "2010-09-09"
Resources:
  WellKnown5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /.well-known/jwks.json endpoint. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-well-known-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  WellKnown5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /.well-known/jwks.json endpoint. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-well-known-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncToken4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/token endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-token-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncToken4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/token endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-token-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncToken5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/token endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-token-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncToken5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/token endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-token-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncCredential4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/credential endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-credential-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncCredential4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/credential endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-credential-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncCredential5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/credential endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-credential-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncCredential5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/credential endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-credential-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncActiveSession4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-active-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncActiveSession4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-active-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncActiveSession5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-active-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncActiveSession5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-active-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncBiometricToken4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/biometricToken endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-biometric-token-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncBiometricToken4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/biometricToken endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-biometric-token-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncBiometricToken5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/biometricToken endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-biometric-token-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncBiometricToken5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/biometricToken endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-biometric-token-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncFinishBiometricSession4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/finishBiometricSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-finish-biometric-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncFinishBiometricSession4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/finishBiometricSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-finish-biometric-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncFinishBiometricSession5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/finishBiometricSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-finish-biometric-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncFinishBiometricSession5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/finishBiometricSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-finish-biometric-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncAbortSession4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/abortSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-abort-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncAbortSession4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/abortSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-abort-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncAbortSession5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/abortSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-abort-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncAbortSession5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/abortSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-abort-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/abortSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncTxmaEvent4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/txmaEvent endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-txma-event-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncTxmaEvent4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/txmaEvent endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-txma-event-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncTxmaEvent5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/txmaEvent endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-txma-event-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncTxmaEvent5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/txmaEvent endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-txma-event-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/txmaEvent
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100
