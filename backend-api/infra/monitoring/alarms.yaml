AWSTemplateFormatVersion: "2010-09-09"
Resources:
  WellKnown5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /.well-known/jwks.json endpoint. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-well-known-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  WellKnown5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /.well-known/jwks.json endpoint. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-well-known-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncToken4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/token endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-token-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncToken4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/token endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-token-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncToken5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/token endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-token-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncToken5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/token endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-token-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/token
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncTokenErrorRateAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: "The number of Async Token Lambda errors is greater than or equal to 10% of all function invocations."
      AlarmName: !Sub "${AWS::StackName}-token-error-rate"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 10
      Metrics:
        - Id: lambdaInvocations
          Label: "Sum of invocations for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncTokenFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncTokenFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncTokenFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrors
          Label: "Sum of function errors for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncTokenFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncTokenFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncTokenFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrorPercentage
          Label: "Percentage of invocations that result in a function error"
          ReturnData: false
          Expression: (lambdaErrors/lambdaInvocations)*100
        - Id: lambdaErrorRate
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage, 0)

  AsyncTokenLowCompletionAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm    
    DependsOn:
      - "AsyncTokenCompletionMetricFilter"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      InsufficientDataActions: []
      AlarmDescription: "A large proportion of Async Token requests have not completed successfully."
      AlarmName: !Sub "${AWS::StackName}-token-low-completion"
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 80
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: lambdaLogStarted
          Label: "Sum of MOBILE_ASYNC_TOKEN_STARTED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncTokenMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_TOKEN_STARTED
                - Name: Version
                  Value: !GetAtt AsyncTokenFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompleted
          Label: "Sum of MOBILE_ASYNC_TOKEN_COMPLETED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncTokenMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_TOKEN_COMPLETED                
                - Name: Version
                  Value: !GetAtt AsyncTokenFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompletePercentage
          Label: "Percentage of invocations that complete successfully"
          ReturnData: false
          Expression: (lambdaLogCompleted/lambdaLogStarted)*100
        - Id: lowCompletionRateThreshold
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage, 100)

  AsyncTokenCompletionMetricFilter:
    Condition: DeployAlarms
    Type: AWS::Logs::MetricFilter    
    Properties:
      LogGroupName: !Ref AsyncTokenLogGroup
      FilterPattern: "{ ($.messageCode = *) && ($.functionVersion = *) }"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "AsyncTokenMessageCode"
          Dimensions:
            - Key: MessageCode
              Value: $.messageCode           
            - Key: Version
              Value: $.functionVersion

  AsyncCredential4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/credential endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-credential-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncCredential4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/credential endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-credential-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncCredential5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/credential endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-credential-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncCredential5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/credential endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-credential-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/credential
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100
  
  AsyncCredentialErrorRateAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: "The number of Async Credential Lambda errors is greater than or equal to 10% of all function invocations."
      AlarmName: !Sub "${AWS::StackName}-credential-error-rate"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 10
      Metrics:
        - Id: lambdaInvocations
          Label: "Sum of invocations for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncCredentialFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncCredentialFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncCredentialFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrors
          Label: "Sum of function errors for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncCredentialFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncCredentialFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncCredentialFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrorPercentage
          Label: "Percentage of invocations that result in a function error"
          ReturnData: false
          Expression: (lambdaErrors/lambdaInvocations)*100
        - Id: lambdaErrorRateThreshold
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF(lambdaErrors >= 5,lambdaErrorPercentage, 0)

  AsyncCredentialLowCompletionAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm    
    DependsOn:
      - "AsyncCredentialCompletionMetricFilter"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      InsufficientDataActions: []
      AlarmDescription: "A large proportion of Async Credential requests have not completed successfully."
      AlarmName: !Sub "${AWS::StackName}-credential-low-completion"
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 80
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: lambdaLogStarted
          Label: "Sum of MOBILE_ASYNC_CREDENTIAL_STARTED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncCredentialMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_CREDENTIAL_STARTED                
                - Name: Version
                  Value: !GetAtt AsyncCredentialFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompleted
          Label: "Sum of MOBILE_ASYNC_CREDENTIAL_COMPLETED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncCredentialMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_CREDENTIAL_COMPLETED                
                - Name: Version
                  Value: !GetAtt AsyncCredentialFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompletePercentage
          Label: "Percentage of invocations that complete successfully"
          ReturnData: false
          Expression: (lambdaLogCompleted/lambdaLogStarted)*100
        - Id: lowCompletionRateThreshold
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage, 100)

  AsyncCredentialCompletionMetricFilter:
    Condition: DeployAlarms
    Type: AWS::Logs::MetricFilter    
    Properties:
      LogGroupName: !Ref AsyncCredentialLogGroup
      FilterPattern: "{ ($.messageCode = *) && ($.functionVersion = *) }"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "AsyncCredentialMessageCode"
          Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion

  AsyncActiveSession4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-active-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncActiveSession4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-active-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncActiveSession5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-active-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncActiveSession5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-active-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncActiveSessionErrorRateAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: "The number of Async Active Session Lambda errors is greater than or equal to 10% of all function invocations."
      AlarmName: !Sub "${AWS::StackName}-active-session-error-rate"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 10
      Metrics:
        - Id: lambdaInvocations
          Label: "Sum of invocations for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncActiveSessionFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncActiveSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrors
          Label: "Sum of function errors for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncActiveSessionFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncActiveSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrorPercentage
          Label: "Percentage of invocations that result in a function error"
          ReturnData: false
          Expression: (lambdaErrors/lambdaInvocations)*100
        - Id: lambdaErrorRate
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage, 0)

  AsyncActiveSessionLowCompletionAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm    
    DependsOn:
      - "AsyncActiveSessionCompletionMetricFilter"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      InsufficientDataActions: []
      AlarmDescription: "A large proportion of Async Active Session requests have not completed successfully."
      AlarmName: !Sub "${AWS::StackName}-active-session-low-completion"
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 80
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: lambdaLogStarted
          Label: "Sum of MOBILE_ASYNC_ACTIVE_SESSION_STARTED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncActiveSessionMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ACTIVE_SESSION_STARTED
                - Name: Version
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompleted
          Label: "Sum of MOBILE_ASYNC_COMPLETED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncActiveSessionMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ACTIVE_SESSION_COMPLETED               
                - Name: Version
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompletePercentage
          Label: "Percentage of invocations that complete successfully"
          ReturnData: false
          Expression: (lambdaLogCompleted/lambdaLogStarted)*100
        - Id: lowCompletionRateThreshold
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage, 100)

  AsyncActiveSessionCompletionMetricFilter:
    Condition: DeployAlarms
    Type: AWS::Logs::MetricFilter    
    Properties:
      LogGroupName: !Ref AsyncActiveSessionLogGroup
      FilterPattern: "{ ($.messageCode = *) && ($.functionVersion = *) }"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "AsyncActiveSessionMessageCode"
          Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion

  AsyncBiometricToken4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/biometricToken endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-biometric-token-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncBiometricToken4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/biometricToken endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-biometric-token-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncBiometricToken5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/biometricToken endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-biometric-token-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncBiometricToken5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/biometricToken endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-biometric-token-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/biometricToken
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncBiometricTokenErrorRateAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: "The number of Async Biometric Token Lambda errors is greater than or equal to 10% of all function invocations."
      AlarmName: !Sub "${AWS::StackName}-biometric-token-error-rate"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 10
      Metrics:
        - Id: lambdaInvocations
          Label: "Sum of invocations for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncBiometricTokenFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncBiometricTokenFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncBiometricTokenFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrors
          Label: "Sum of function errors for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncBiometricTokenFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncBiometricTokenFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncBiometricTokenFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrorPercentage
          Label: "Percentage of invocations that result in a function error"
          ReturnData: false
          Expression: (lambdaErrors/lambdaInvocations)*100
        - Id: lambdaErrorRate
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage, 0)

  AsyncBiometricTokenLowCompletionAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm    
    DependsOn:
      - "AsyncBiometricTokenCompletionMetricFilter"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      InsufficientDataActions: []
      AlarmDescription: "A large proportion of Async Biometric Token requests have not completed successfully."
      AlarmName: !Sub "${AWS::StackName}-biometric-token-low-completion"
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 80
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: lambdaLogStarted
          Label: "Sum of MOBILE_ASYNC_BIOMETRIC_TOKEN_STARTED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncBiometricTokenMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_BIOMETRIC_TOKEN_STARTED
                - Name: Version
                  Value: !GetAtt AsyncBiometricTokenFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompleted
          Label: "Sum of MOBILE_ASYNC_BIOMETRIC_TOKEN_COMPLETED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncBiometricTokenMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_BIOMETRIC_TOKEN_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncBiometricTokenFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompletePercentage
          Label: "Percentage of invocations that complete successfully"
          ReturnData: false
          Expression: (lambdaLogCompleted/lambdaLogStarted)*100
        - Id: lowCompletionRateThreshold
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage, 100)

  AsyncBiometricTokenCompletionMetricFilter:
    Condition: DeployAlarms
    Type: AWS::Logs::MetricFilter    
    Properties:
      LogGroupName: !Ref AsyncBiometricTokenLogGroup
      FilterPattern: "{ ($.messageCode = *) && ($.functionVersion = *) }"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "AsyncBiometricTokenMessageCode"
          Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion

  AsyncFinishBiometricSession4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/finishBiometricSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-finish-biometric-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncFinishBiometricSession4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/finishBiometricSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-finish-biometric-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncFinishBiometricSession5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/finishBiometricSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, WarningAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-finish-biometric-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncFinishBiometricSession5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/finishBiometricSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [StaticVariables, urls, CriticalAlarmsRunbook]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-finish-biometric-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/finishBiometricSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncFinishBiometricSessionErrorRateAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: "The number of Async Finish Biometric Token Lambda errors is greater than or equal to 10% of all function invocations."
      AlarmName: !Sub "${AWS::StackName}-finish-biometric-session-error-rate"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 10
      Metrics:
        - Id: lambdaInvocations
          Label: "Sum of invocations for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncFinishBiometricSessionFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncFinishBiometricSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncFinishBiometricSessionFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrors
          Label: "Sum of function errors for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncFinishBiometricSessionFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncFinishBiometricSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncFinishBiometricSessionFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrorPercentage
          Label: "Percentage of invocations that result in a function error"
          ReturnData: false
          Expression: (lambdaErrors/lambdaInvocations)*100
        - Id: lambdaErrorRate
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage, 0)

  AsyncFinishBiometricSessionLowCompletionAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm    
    DependsOn:
      - "AsyncFinishBiometricSessionCompletionMetricFilter"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      InsufficientDataActions: []
      AlarmDescription: "A large proportion of Async Finish Biometric Session requests have not completed successfully."
      AlarmName: !Sub "${AWS::StackName}-finish-biometric-session-low-completion"
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 80
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: lambdaLogStarted
          Label: "Sum of MOBILE_ASYNC_FINISH_BIOMETRIC_SESSION_STARTED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncFinishBiometricSessionMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_FINISH_BIOMETRIC_SESSION_STARTED
                - Name: Version
                  Value: !GetAtt AsyncFinishBiometricSessionFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompleted
          Label: "Sum of MOBILE_ASYNC_FINISH_BIOMETRIC_SESSION_COMPLETED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncFinishBiometricSessionMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_FINISH_BIOMETRIC_SESSION_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncFinishBiometricSessionFunction.Version.Version
            Period: 300
            Stat: Sum
        - Id: lambdaLogCompletePercentage
          Label: "Percentage of invocations that complete successfully"
          ReturnData: false
          Expression: (lambdaLogCompleted/lambdaLogStarted)*100
        - Id: lowCompletionRateThreshold
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage, 100)

  AsyncFinishBiometricSessionCompletionMetricFilter:
    Condition: DeployAlarms
    Type: AWS::Logs::MetricFilter    
    Properties:
      LogGroupName: !Ref AsyncFinishBiometricSessionLogGroup
      FilterPattern: "{ ($.messageCode = *) && ($.functionVersion = *) }"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "AsyncFinishBiometricSessionMessageCode"
          Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion
