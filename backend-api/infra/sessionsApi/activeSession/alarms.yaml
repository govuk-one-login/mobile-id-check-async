AWSTemplateFormatVersion: "2010-09-09"
Resources:
  AsyncActiveSession4XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [ StaticVariables, urls, WarningAlarmsRunbook ]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-active-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=20) && (errorSum4XX>=2),errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncActiveSession4XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/activeSession endpoint with a 4XX error. See support manual: ${SupportManualUrl}"
        - SupportManualUrl: !FindInMap [ StaticVariables, urls, SupportManual ]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-active-session-4xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=20,errorPercentage4XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum4XX
          Label: "Number of 4XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage4XX
          Label: "Number of 4XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum4XX/invocations) * 100

  AsyncActiveSession5XXLowThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "1% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [ StaticVariables, urls, WarningAlarmsRunbook ]
      AlarmName: !Sub "${AWS::StackName}-low-threshold-async-active-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 1
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncActiveSession5XXHighThresholdAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub
        - "80% or more of requests are failing on the /async/activeSession endpoint with a 5XX error. See support manual: ${SupportManualUrl}"
        - SupportManualUrl: !FindInMap [ StaticVariables, urls, SupportManual ]
      AlarmName: !Sub "${AWS::StackName}-high-threshold-async-active-session-5xx-api-gw"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      TreatMissingData: notBreaching
      Threshold: 80
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations>=10,errorPercentage5XX,0)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorSum5XX
          Label: "Number of 5XX errors"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-sessions-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /async/activeSession
            Period: 60
            Stat: Sum
        - Id: errorPercentage5XX
          Label: "Number of 5XX errors returned as a percentage"
          ReturnData: false
          Expression: (errorSum5XX/invocations) * 100

  AsyncActiveSessionErrorRateAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: "The number of Async Active Session Lambda errors is greater than or equal to 10% for the latest function version"
      AlarmName: !Sub "${AWS::StackName}-active-session-lambda-error-rate"
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      TreatMissingData: notBreaching
      Threshold: 10
      Metrics:
        - Id: lambdaInvocations
          Label: "Sum of invocations for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncActiveSessionFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncActiveSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrors
          Label: "Sum of function errors for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: Resource
                  Value: !Sub "${AsyncActiveSessionFunction}:live"
                - Name: FunctionName
                  Value: !Ref AsyncActiveSessionFunction
                - Name: ExecutedVersion
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaErrorPercentage
          Label: "Percentage of invocations that result in a function error"
          ReturnData: false
          Expression: (lambdaErrors/lambdaInvocations)*100
        - Id: lambdaErrorRate
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF(lambdaErrors >= 5, lambdaErrorPercentage)

  AsyncActiveSessionLowCompletionAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - "AsyncActiveSessionCompletionMetricFilter"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      InsufficientDataActions: [ ]
      AlarmDescription: "A large proportion of Async Active Session requests have not completed successfully."
      AlarmName: !Sub "${AWS::StackName}-active-session-lambda-low-completion"
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 80
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: lambdaLogStarted
          Label: "Sum of MOBILE_ASYNC_ACTIVE_SESSION_STARTED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncActiveSessionMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ACTIVE_SESSION_STARTED
                - Name: Version
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaLogCompleted
          Label: "Sum of MOBILE_ASYNC_COMPLETED messageCodes for latest Lambda version"
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: AsyncActiveSessionMessageCode
              Dimensions:
                - Name: MessageCode
                  Value: MOBILE_ASYNC_ACTIVE_SESSION_COMPLETED
                - Name: Version
                  Value: !GetAtt AsyncActiveSessionFunction.Version.Version
            Period: 60
            Stat: Sum
        - Id: lambdaLogCompletePercentage
          Label: "Percentage of invocations that complete successfully"
          ReturnData: false
          Expression: (lambdaLogCompleted/lambdaLogStarted)*100
        - Id: lowCompletionRateThreshold
          Label: "Error threshold calculation"
          ReturnData: true
          Expression: IF((lambdaLogStarted-lambdaLogCompleted)>= 5, lambdaLogCompletePercentage)

  AsyncActiveSessionConcurrencyReachingLimitAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-active-session-concurrency-reaching-limit"
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning"
      InsufficientDataActions: [ ]
      AlarmDescription: !Sub
        - "Reserved concurrency usage for Async Active Session lambda has exceeded 80%. See runbook: ${RunbookUrl}"
        - RunbookUrl: !FindInMap [ StaticVariables, urls, WarningAlarmsRunbook ]
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncActiveSessionFunction
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 64
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  AsyncActiveSessionThrottleAlarm:
    Condition: DeployAlarms
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "${AWS::StackName}-active-session-lambda-throttle"
      AlarmDescription: !Sub
        - "Trigger an alarm if the Async Active Session Lambda throttles. See support manual: ${SupportManualUrl}"
        - SupportManualUrl: !FindInMap [StaticVariables, urls, SupportManual]
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical"
      OKActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-critical"
      InsufficientDataActions: []
      Namespace: AWS/Lambda
      MetricName: Throttles
      Dimensions:
        - Name: FunctionName
          Value: !Ref AsyncActiveSessionFunction
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Period: 60
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      TreatMissingData: notBreaching
