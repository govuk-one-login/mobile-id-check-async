AWSTemplateFormatVersion: "2010-09-09"

Resources:
  TokenFunction:
    DependsOn:
      - TokenFunctionLogGroup
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2022
        Sourcemap: false
        EntryPoints:
          - src/functions/sts-mock/token/tokenHandler.ts
      checkov:
        skip:
          - id: CKV_AWS_115
            comment: Function-level concurrent execution limit not needed for dev environment
          - id: CKV_AWS_116
            comment: DLQ is not required
          - id: CKV_AWS_173
            comment: Environment variables content not sensitive
    Properties:
      Description: Mock STS token function for exchanging an access token for a service token
      FunctionName: !Sub ${AWS::StackName}-sts-mock-token
      Handler: tokenHandler.lambdaHandler
      ReservedConcurrentExecutions: !If
        - isDev
        - !Ref AWS::NoValue
        - !FindInMap
          - StsMockTokenLambda
          - !Ref Environment
          - ReservedConcurrentExecutions
      Timeout: 5
      Events:
        Token:
          Type: Api
          Properties:
            Path: /token
            Method: post
            RestApiId: !Ref StsMockApi
      Role: !GetAtt TokenFunctionRole.Arn
      Environment:
        Variables:
          STS_MOCK_BASE_URL: !Sub https://${StsMockApiDomainName}
          ASYNC_BACKEND_BASE_URL: !If
            - UseDevOverrideSessionsBaseUrl
            - !Ref DevOverrideSessionsBaseUrl
            - !Sub https://sessions.review-b-async.${Environment}.account.gov.uk
          KEY_STORAGE_BUCKET_NAME: !Ref JwksBucket
      VpcConfig:
        SubnetIds:
          - !ImportValue devplatform-vpc-ProtectedSubnetIdA
          - !ImportValue devplatform-vpc-ProtectedSubnetIdB
          - !ImportValue devplatform-vpc-ProtectedSubnetIdC
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId

  TokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt TokenFunction.Arn
      Principal: events.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${StsMockApi}/*/*/*

  TokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-sts-mock-token
      KmsKeyId: !GetAtt SymmetricKey.Arn

  TokenFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Execution role for the token function
      RoleName: !Sub ${AWS::StackName}-sts-mock-token
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: S3ReadPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub
                    - arn:aws:s3:::${TargetBucket}/*
                    - TargetBucket: !Ref JwksBucket