AWSTemplateFormatVersion: "2010-09-09"

Resources:
  TestSessionsFunction:
    DependsOn:
      - TestSessionsFunctionLogGroup
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2022
        Sourcemap: false
        EntryPoints:
          - src/functions/test-sessions/testSessionsHandler.ts
    Properties:
      Description: Test sessions lambda for putting items into the Sessions table
      Events:
        TestSessions:
          Type: Api
          Properties:
            Path: /test-sessions/{sessionId}
            Method: put
            RestApiId: !Ref TestResourcesApi
      FunctionName: !Sub ${AWS::StackName}-test-sessions
      Runtime: nodejs20.x
      Handler: testSessionsHandler.lambdaHandler
      Timeout: 5
      Role: !GetAtt TestSessionsFunctionRole.Arn
      Environment:
        Variables:
          SESSIONS_TABLE_NAME:
            Fn::ImportValue: !Sub ${BackendStackName}-sessions-table-arn
      VpcConfig:
        SubnetIds:
          - !ImportValue devplatform-vpc-PrivateSubnetIdA
          - !ImportValue devplatform-vpc-PrivateSubnetIdB
          - !ImportValue devplatform-vpc-PrivateSubnetIdC
        SecurityGroupIds:
          - !ImportValue devplatform-vpc-AWSServicesEndpointSecurityGroupId

  TestSessionsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-test-sessions

  TestSessionsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Execution role for the test sessions handler
      RoleName: !Sub ${AWS::StackName}-test-sessions
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: VpcPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Resource: '*'
        - PolicyName: LoggingPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*