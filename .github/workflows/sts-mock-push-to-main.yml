name: sts-mock push to main
on:
  push:
    branches:
      - main
    paths:
      - "sts-mock/**"
      - ".github/workflows/sts-mock-push-to-main.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  sonar-scan:
    name: Run tests and Sonar scan
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: sts-mock
    steps:
      - name: Check out repository code
        uses: actions/checkout@9a9194f87191a7e9055e3e9b95b8cfb13023bb08 #main
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup nodeJS v20
        uses: actions/setup-node@26961cf329f22f6837d5f54c3efd76b480300ace #main
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: sts-mock/package-lock.json

      - name: Install dependencies
        run: npm install

      # Generate test coverage report for Sonar main branch analysis
      - name: Run Tests
        run: npm run test:unit

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@383f7e52eae3ab0510c3cb0e7d9d150bbaeab838 #master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: sts-mock

  # build-and-push-test-image-to-dev:
  #   name: Build and push test image to Dev
  #   needs: sts-mock-tests-and-sonar-scan
  #   runs-on: ubuntu-latest
  #   env:
  #     STS_MOCK_DEV_TEST_IMAGE_REPOSITORY_URI: ${{ secrets.STS_MOCK_DEV_TEST_IMAGE_REPOSITORY_URI }}      
  #     DEV_CONTAINER_SIGN_KMS_KEY: ${{ secrets.DEV_CONTAINER_SIGN_KMS_KEY }}
  #     IMAGE_TAG: latest
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: sts-mock
  #   steps:
  #   - name: Check out repository code
  #     uses: actions/checkout@9a9194f87191a7e9055e3e9b95b8cfb13023bb08 #main
  #     with:
  #       submodules: true
  #       fetch-depth: 0

  #   - name: Build test image
  #     run: |
  #       docker build -t $STS_MOCK_DEV_TEST_IMAGE_REPOSITORY_URI:$IMAGE_TAG . 

  #   - name: Configure AWS credentials for DEV
  #     uses: aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573 #main
  #     with:
  #       aws-region: eu-west-2
  #       role-to-assume: ${{ secrets.STS_MOCK_DEV_GH_ACTIONS_ROLE_ARN }}

  #   - name: Login to Amazon ECR DEV
  #     uses: aws-actions/amazon-ecr-login@a81a5945e74802f35ca53aa274a9e00436e6210e #main

  #   - name: Push image to DEV
  #     run: |
  #       docker push $STS_MOCK_DEV_TEST_IMAGE_REPOSITORY_URI:$IMAGE_TAG

  #   - name: Install Cosign
  #     uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 #main
  #     with:
  #       cosign-release: 'v1.9.0'

  #   - name: Code sign the Docker image
  #     id: cosign-image             
  #     run: |
  #       cosign sign --key awskms:///$DEV_CONTAINER_SIGN_KMS_KEY $STS_MOCK_DEV_TEST_IMAGE_REPOSITORY_URI:$IMAGE_TAG

  build-and-upload-sam-artifact-to-dev:
    name: Validate & upload S3 artifact to dev
    runs-on: ubuntu-latest
    needs: sonar-scan
    defaults:
      run:
        shell: bash
        working-directory: sts-mock
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup nodeJS v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: sts-mock/package-lock.json

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@2360ef6d90015369947b45b496193ab9976a9b04 #main
        with:
          use-installer: true
          version: 1.123.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573 #main
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.STS_MOCK_DEV_GH_ACTIONS_ROLE_ARN }}

      - name: Sam Validate
        run: |
          echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
          sam validate --lint

      - name: Sam Build
        run: |
          sam build --cached

      - name: Upload SAM artifact into the DEV artifact bucket
        uses: govuk-one-login/devplatform-upload-action@v3.9.2
        with:
          artifact-bucket-name: ${{ secrets.STS_MOCK_DEV_ARTIFACT_BUCKET }}
          signing-profile-name: ${{ secrets.DEV_SIGNING_PROFILE_NAME }}
          template-file: .aws-sam/build/template.yaml
          working-directory: sts-mock

  # build-and-push-test-image-to-build:
  #   name: Build and push test image to Build
  #   needs: sts-mock-tests-and-sonar-scan  
  #   runs-on: ubuntu-latest
  #   env:
  #     STS_MOCK_BUILD_TEST_IMAGE_REPOSITORY_URI: ${{ secrets.STS_MOCK_BUILD_TEST_IMAGE_REPOSITORY_URI }}      
  #     BUILD_CONTAINER_SIGN_KMS_KEY: ${{ secrets.BUILD_CONTAINER_SIGN_KMS_KEY }}
  #     IMAGE_TAG: latest
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: sts-mock
  #   steps:
  #   - name: Check out repository code
  #     uses: actions/checkout@9a9194f87191a7e9055e3e9b95b8cfb13023bb08 #main
  #     with:
  #       submodules: true
  #       fetch-depth: 0

  #   - name: Build test image
  #     run: |
  #       docker build -t $STS_MOCK_BUILD_TEST_IMAGE_REPOSITORY_URI:$IMAGE_TAG . 

  #   - name: Configure AWS credentials for BUILD
  #     uses: aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573 #main
  #     with:
  #       aws-region: eu-west-2
  #       role-to-assume: ${{ secrets.STS_MOCK_BUILD_GH_ACTIONS_ROLE_ARN }}

  #   - name: Login to Amazon ECR BUILD
  #     uses: aws-actions/amazon-ecr-login@a81a5945e74802f35ca53aa274a9e00436e6210e #main

  #   - name: Push image to BUILD
  #     run: |
  #       docker push $STS_MOCK_BUILD_TEST_IMAGE_REPOSITORY_URI:$IMAGE_TAG

  #   - name: Install Cosign
  #     uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 #main
  #     with:
  #       cosign-release: 'v1.9.0'

  #   - name: Code sign the Docker image
  #     id: cosign-image             
  #     run: |
  #       cosign sign --key awskms:///$BUILD_CONTAINER_SIGN_KMS_KEY $STS_MOCK_BUILD_TEST_IMAGE_REPOSITORY_URI:$IMAGE_TAG

  build-and-upload-sam-artifact-to-build:
    name: Validate & upload S3 artifact to Build
    runs-on: ubuntu-latest
    needs: sonar-scan 
    defaults:
      run:
        shell: bash
        working-directory: sts-mock
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup nodeJS v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: sts-mock/package-lock.json

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@2360ef6d90015369947b45b496193ab9976a9b04 #main
        with:
          use-installer: true
          version: 1.123.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573 #main
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.STS_MOCK_BUILD_GH_ACTIONS_ROLE_ARN }}

      - name: Sam Validate
        run: |
          echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
          sam validate --lint

      - name: Sam Build
        run: |
          sam build --cached

      - name: Upload SAM artifact into the BUILD artifact bucket
        uses: govuk-one-login/devplatform-upload-action@v3.9.2
        with:
          artifact-bucket-name: ${{ secrets.STS_MOCK_BUILD_ARTIFACT_BUCKET }}
          signing-profile-name: ${{ secrets.BUILD_SIGNING_PROFILE_NAME }}
          template-file: .aws-sam/build/template.yaml
          working-directory: sts-mock