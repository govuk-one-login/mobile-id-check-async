name: backend-api pull request
on:
  # Triggers the workflow on pull request events for all branches
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
    paths:
      - "backend-api/**"
      - ".github/workflows/backend-api-pull-request.yml"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ci-checks:
    name: Run CI checks
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend-api
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup nodeJS v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend-api/package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Linting
        run: npm run lint

      - name: Check formatting using Prettier
        run: npm run format:check

      # Runs unit, infra and pact tests
      - name: Run tests 
        run: npm run test

      - name: Generate proxy open api spec
        run: npm run generate-proxy-open-api

      - name: Validate SAM template
        run: sam validate --lint

      - name: "Run SonarCloud Scan"
        uses: SonarSource/sonarcloud-github-action@eb211723266fe8e83102bac7361f0a05c3ac1d1b # master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: backend-api

      - name: SonarQube Quality Gate check
        uses: Sonarsource/sonarqube-quality-gate-action@dc2f7b0dd95544cd550de3028f89193576e958b9 # master
        # Force to fail step after specific time
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: backend-api/.scannerwork/report-task.txt

  checkov-rules:
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          framework: cloudformation
          quiet: true
          output_format: cli,sarif
          output_file_path: console,results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        if: success() || failure()
        with:
          sarif_file: results.sarif