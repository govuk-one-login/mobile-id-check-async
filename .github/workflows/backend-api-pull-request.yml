name: backend-api pull request
on:
  # Triggers the workflow on pull request events for all branches
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
    paths:
      - "backend-api/**"
      - ".github/workflows/backend-api-pull-request.yml"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ci-checks:
    name: Run CI checks
    runs-on: ubuntu-22.04
    permissions:
      packages: read
    defaults:
      run:
        shell: bash
        working-directory: backend-api
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup nodeJS v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend-api/package-lock.json
          registry-url: "https://npm.pkg.github.com"
          scope: "@govuk-one-login"

      - name: Install dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Linting
        run: npm run lint

      - name: Check formatting using Prettier
        run: npm run format:check

      # Runs unit, infra and pact tests
      - name: Run tests 
        run: npm run test

      - name: Generate proxy open api spec
        run: npm run generate-proxy-open-api

      - name: Validate SAM template
        run: sam validate --lint

      - name: "Run SonarCloud Scan"
        uses: SonarSource/sonarcloud-github-action@383f7e52eae3ab0510c3cb0e7d9d150bbaeab838 # master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: backend-api

      - name: SonarQube Quality Gate check
        uses: Sonarsource/sonarqube-quality-gate-action@8406f4f1edaffef38e9fb9c53eb292fc1d7684fa # master
        # Force to fail step after specific time
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: backend-api/.scannerwork/report-task.txt

