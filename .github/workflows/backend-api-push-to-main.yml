name: backend-api push to main
on:
  push:
    branches:
      - main
    paths:
      - "backend-api/**"
      - ".github/workflows/backend-api-push-to-main.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  packages: read

jobs:
  sonar-scan-and-pact-test:
    name: Sonar main branch scan and pact tests
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: backend-api
    steps:
      - name: Check out repository code
        uses: actions/checkout@9a9194f87191a7e9055e3e9b95b8cfb13023bb08 #main
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup nodeJS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: ./backend-api/.nvmrc
          cache: npm
          cache-dependency-path: backend-api/package-lock.json

      - name: Configure authentication for private packages in .npmrc
        run: |
          echo "engine-strict=true" > .npmrc
          echo "@govuk-one-login:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> .npmrc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm install

      # Generate test coverage report for Sonar main branch analysis
      - name: Run Tests
        run: npm run test:unit

      - name: Run SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf # v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend-api

      - name: Run pact tests
        continue-on-error: true # Pact tests are currently failing - remove step once fixed
        env:
          PACT_BROKER_URL: "https://pactbroker-onelogin.account.gov.uk"
          PACT_BROKER_USERNAME: ${{ secrets.PACT_BROKER_USERNAME }}
          PACT_BROKER_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
          PACT_BROKER_SOURCE_SECRET: ${{ secrets.PACT_BROKER_SOURCE_SECRET }}
          PUBLISH_PACT_VERIFICATION_RESULTS: "true"
        run: npm run test:pact:ci

  build-and-push-to-dev:
    name: 'Push test image and SAM artifact to dev'
    needs: sonar-scan-and-pact-test
    runs-on: ubuntu-22.04
    env:
      BACKEND_API_DEV_TEST_IMAGE_REPOSITORY: ${{ secrets.BACKEND_API_DEV_TEST_IMAGE_REPOSITORY }}
      DEV_CONTAINER_SIGN_KMS_KEY: ${{ secrets.DEV_CONTAINER_SIGN_KMS_KEY }}
      IMAGE_TAG: latest
    defaults:
      run:
        shell: bash
        working-directory: backend-api
    steps:
    - name: Check out repository code
      uses: actions/checkout@9a9194f87191a7e9055e3e9b95b8cfb13023bb08 #main
      with:
        submodules: true
        fetch-depth: 0

    - name: Setup nodeJS 
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version-file: ./backend-api/.nvmrc
        cache: npm
        cache-dependency-path: backend-api/package-lock.json

    - name: Configure authentication for private packages in .npmrc
      run: |
        echo "engine-strict=true" > .npmrc
        echo "@govuk-one-login:registry=https://npm.pkg.github.com/" >> .npmrc
        echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> .npmrc
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 #v3.9.2
      with:
        cosign-release: 'v2.5.2'

    - name: Setup SAM CLI
      uses: aws-actions/setup-sam@f664fad9e12492edfc187a31f575537dfbb0ff63 #main
      with:
        use-installer: true

    - name: Install dependencies
      run: npm install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573 #main
      with:
        aws-region: eu-west-2
        role-to-assume: ${{ secrets.BACKEND_API_DEV_GH_ACTIONS_ROLE_ARN }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@b06ccd195086ba5254c95c627ee1cbeab86c7432 #main

    - name: Build test image
      run: |
        docker build -t $BACKEND_API_DEV_TEST_IMAGE_REPOSITORY:$IMAGE_TAG . 

    - name: Push image
      run: |
        docker push $BACKEND_API_DEV_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

    - name: Sign the image
      run: |
        cosign sign --key awskms:///$DEV_CONTAINER_SIGN_KMS_KEY $BACKEND_API_DEV_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

    - name: Generate proxy Open API spec
      run: |
        npm run generate-proxy-open-api

    - name: SAM validate and lint
      run: |
        echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
        sam validate --lint

    - name: SAM build
      run: |
        sam build

    - name: Upload SAM artifact into the S3 artifact bucket
      uses: govuk-one-login/devplatform-upload-action@v3.10.1
      with:
        artifact-bucket-name: ${{ secrets.BACKEND_API_DEV_ARTIFACT_BUCKET }}
        signing-profile-name: ${{ secrets.DEV_SIGNING_PROFILE_NAME }}
        template-file: .aws-sam/build/template.yaml
        working-directory: backend-api

  build-and-push-to-build:
    name: Push test image and SAM artifact to build
    needs: sonar-scan-and-pact-test
    runs-on: ubuntu-22.04
    env:
      BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY: ${{ secrets.BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY }}
      BUILD_CONTAINER_SIGN_KMS_KEY: ${{ secrets.BUILD_CONTAINER_SIGN_KMS_KEY }}
      IMAGE_TAG: latest
    defaults:
      run:
        shell: bash
        working-directory: backend-api
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup nodeJS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: ./backend-api/.nvmrc
          cache: npm
          cache-dependency-path: backend-api/package-lock.json

      - name: Configure authentication for private packages in .npmrc
        run: |
          echo "engine-strict=true" > .npmrc
          echo "@govuk-one-login:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> .npmrc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 #v3.9.2
        with:
          cosign-release: 'v2.5.2'

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@f664fad9e12492edfc187a31f575537dfbb0ff63 #main
        with:
          use-installer: true

      - name: Install dependencies
        run: npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573 #main
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.BACKEND_API_BUILD_GH_ACTIONS_ROLE_ARN }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@b06ccd195086ba5254c95c627ee1cbeab86c7432 #main

      - name: Build test image
        run: |
          docker build -t $BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY:$IMAGE_TAG . 

      - name: Push image
        run: |
          docker push $BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

      - name: Sign the image
        run: |
          cosign sign --key awskms:///$BUILD_CONTAINER_SIGN_KMS_KEY $BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

      - name: Generate proxy Open API spec
        run: |
          npm run generate-proxy-open-api

      - name: Sam validate and lint
        run: |
          echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
          sam validate --lint

      - name: Sam build
        run: |
          sam build --cached

      - name: Upload SAM artifact into the S3 artifact bucket
        uses: govuk-one-login/devplatform-upload-action@v3.10.1
        with:
          artifact-bucket-name: ${{ secrets.BACKEND_API_BUILD_ARTIFACT_BUCKET }}
          signing-profile-name: ${{ secrets.BUILD_SIGNING_PROFILE_NAME}}
          template-file: .aws-sam/build/template.yaml
          working-directory: backend-api