name: backend-api push to main
on:
  push:
    branches:
      - main
    paths:
      - "backend-api/**"
      - ".github/workflows/backend-api-push-to-main.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  sonar-scan:
    name: Sonar main branch scan
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend-api
    steps:
      - name: Check out repository code
        uses: actions/checkout@9a9194f87191a7e9055e3e9b95b8cfb13023bb08 #main
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup nodeJS v20
        uses: actions/setup-node@26961cf329f22f6837d5f54c3efd76b480300ace #main
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend-api/package-lock.json

      - name: Install dependencies
        run: npm install

      # Generate test coverage report for Sonar main branch analysis
      - name: Run Tests
        run: npm run test:unit

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@eb211723266fe8e83102bac7361f0a05c3ac1d1b #master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push-to-dev:
    name: 'Push test image and SAM artifact to dev'
    needs: sonar-scan
    runs-on: ubuntu-latest
    env:
      BACKEND_API_DEV_TEST_IMAGE_REPOSITORY: ${{ secrets.BACKEND_API_DEV_TEST_IMAGE_REPOSITORY }}
      DEV_CONTAINER_SIGN_KMS_KEY: ${{ secrets.DEV_CONTAINER_SIGN_KMS_KEY }}
      IMAGE_TAG: latest
    defaults:
      run:
        shell: bash
        working-directory: backend-api
    steps:
    - name: Check out repository code
      uses: actions/checkout@9a9194f87191a7e9055e3e9b95b8cfb13023bb08 #main
      with:
        submodules: true
        fetch-depth: 0

    - name: Setup nodeJS v20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: npm
        cache-dependency-path: backend-api/package-lock.json

    - name: Install Cosign
      uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 #main
      with:
        cosign-release: 'v1.9.0'

    - name: Setup SAM CLI
      uses: aws-actions/setup-sam@2360ef6d90015369947b45b496193ab9976a9b04 #main
      with:
        use-installer: true
        version: 1.123.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@1ceaabc2d4208b18ff52a76e80c3a28df83f0277 #main
      with:
        aws-region: eu-west-2
        role-to-assume: ${{ secrets.BACKEND_API_DEV_GH_ACTIONS_ROLE_ARN }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@08fda13c2502925256496fadb53b7718f48b28c5 #main

    - name: Build test image
      run: |
        docker build -t $BACKEND_API_DEV_TEST_IMAGE_REPOSITORY:$IMAGE_TAG . 

    - name: Push image
      run: |
        docker push $BACKEND_API_DEV_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

    - name: Sign the image
      run: |
        cosign sign --key awskms:///$DEV_CONTAINER_SIGN_KMS_KEY $BACKEND_API_DEV_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

    - name: SAM validate and lint
      run: |
        echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
        sam validate --lint

    - name: SAM build
      run: |
        sam build

    - name: Upload SAM artifact into the S3 artifact bucket
      uses: govuk-one-login/devplatform-upload-action@b7994fb959f70cc1440295de9e823f317ffa197e #main
      with:
        artifact-bucket-name: ${{ secrets.BACKEND_API_DEV_ARTIFACT_BUCKET }}
        signing-profile-name: ${{ secrets.DEV_SIGNING_PROFILE_NAME }}
        template-file: .aws-sam/build/template.yaml
        working-directory: backend-api

  build-and-push-to-build:
    name: Push test image and SAM artifact to build
    needs: sonar-scan
    runs-on: ubuntu-latest
    env:
      BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY: ${{ secrets.BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY }}
      BUILD_CONTAINER_SIGN_KMS_KEY: ${{ secrets.BUILD_CONTAINER_SIGN_KMS_KEY }}
      IMAGE_TAG: latest
    defaults:
      run:
        shell: bash
        working-directory: backend-api
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup nodeJS v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend-api/package-lock.json

      - name: Install Cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 #main
        with:
          cosign-release: 'v1.9.0'

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@2360ef6d90015369947b45b496193ab9976a9b04 #main
        with:
          use-installer: true
          version: 1.123.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@1ceaabc2d4208b18ff52a76e80c3a28df83f0277 #main
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.BACKEND_API_BUILD_GH_ACTIONS_ROLE_ARN }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@08fda13c2502925256496fadb53b7718f48b28c5 #main

      - name: Build test image
        run: |
          docker build -t $BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY:$IMAGE_TAG . 

      - name: Push image
        run: |
          docker push $BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

      - name: Sign the image
        run: |
          cosign sign --key awskms:///$BUILD_CONTAINER_SIGN_KMS_KEY $BACKEND_API_BUILD_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

      - name: Sam validate and lint
        run: |
          echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
          sam validate --lint

      - name: Sam build
        run: |
          sam build --cached

      - name: Upload SAM artifact into the S3 artifact bucket
        uses: govuk-one-login/devplatform-upload-action@b7994fb959f70cc1440295de9e823f317ffa197e #main
        with:
          artifact-bucket-name: ${{ secrets.BACKEND_API_BUILD_ARTIFACT_BUCKET }}
          signing-profile-name: ${{ secrets.BUILD_SIGNING_PROFILE_NAME}}
          template-file: .aws-sam/build/template.yaml
          working-directory: backend-api